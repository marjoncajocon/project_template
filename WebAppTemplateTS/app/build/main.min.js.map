{
  "version": 3,
  "sources": ["../plugin/core/core.mts", "../plugin/core/bs.3.mts", "../plugin/core/lte.3.mts", "../main.mts"],
  "sourcesContent": ["type WidgetElement = HTMLElement | HTMLInputElement | HTMLSelectElement | HTMLCanvasElement;\ntype CEvent = [string, EventListenerOrEventListenerObject];\n\nclass Widget {\n  obj: string;\n  control: WidgetElement;\n  body: HTMLElement\n  widgets: Widget[]\n  events_list: CEvent[]\n\n  public constructor(element: string) {\n    this.obj = element;\n    this.control = document.createElement(element);\n    this.body = document.body;\n    this.widgets = [];\n    this.events_list = [];\n  }\n\n  public HasClass(className: string): boolean {\n    const clist = this.control.classList;\n    for (const item of clist) {\n      if (item == className) {\n        return true;\n      }\n    }\n    return false;\n  }\n  \n  public Clear(): void {\n    // this only clear the next \n    // this function use for deep clear the items\n    for (const item of this.widgets) {\n      item.Delete();\n    }\n    this.widgets.length = 0;\n  }\n\n  public Dispose(): void {\n\n  }\n\n\n  public Delete(): void {\n    this.Clear(); // clear first the leaves\n    this.RemoveEvents(); // remove the current events\n    this.Dispose(); // diposal \n    this.control.remove(); // this is the final\n  }\n\n\n  public AddStyle(styles: { [index: string]: string } | string, value = ''): Widget {\n    if (typeof (styles) == 'object') {\n\n      for (const item in styles) {\n        //this.control.style[item] = styles[item];\n        this.control.style.setProperty(item, styles[item]);\n      }\n    } else if (typeof (styles) == 'string') {\n      this.control.style.setProperty(styles, value);\n    }\n    return this;\n  }\n  \n  public AddClass(cs: string | string[]): Widget {\n    if (typeof (cs) == 'string') {\n      this.control.classList.add(cs);\n    } else if (cs instanceof Array) {\n      for (const item of cs) {\n        if (typeof (item) == 'string') {\n          this.control.classList.add(item);\n        }\n      }\n    }\n    return this;\n  }\n  public DeleteClass(cs: string | string[]): Widget {\n    if (typeof (cs) == 'string') {\n      this.control.classList.remove(cs);\n    } else if (cs instanceof Array) {\n      for (const item of cs) {\n        if (typeof (item) == 'string') {\n          this.control.classList.remove(item);\n        }\n      }\n    }\n    return this;\n  }\n\n\n  public DeleteAttr(name: string | string[]) {\n    if (typeof (name) == \"string\") {\n      this.control.removeAttribute(name);\n    } else if (name instanceof Array) {\n      for (const item of name) {\n        this.control.removeAttribute(item);\n      }\n    }\n\n    return this;\n  }\n\n  public AddAttr(attrs: { [index: string]: string }, value: string = ''): Widget {\n    if (typeof (attrs) == 'object') {\n      for (const item in attrs) {\n        this.control.setAttribute(item, attrs[item]);\n      }\n    } else if (typeof (attrs) == 'string') {\n      this.control.setAttribute(attrs, value);\n    }\n    return this;\n  }\n  public GetAttr(key: string): string | null {\n    return this.control.getAttribute(key);\n  }\n  public AddValue(v: string|boolean): Widget {\n    if (this.control instanceof HTMLInputElement || this.control instanceof HTMLSelectElement) {\n      if (typeof(v) == 'string') {\n        this.control.value = v;\n      } else if (this.control.type == 'radio' || this.control.type == 'checkbox'){\n        this.control.checked = v;\n      }\n    }\n    return this;\n  }\n  public GetValue(): string|boolean {\n    //return this.control.value;\n    if (this.control instanceof HTMLInputElement || this.control instanceof HTMLSelectElement) {\n      if (typeof(this.control.value) == 'string') {\n        return this.control.value;\n      } else if (this.control.type == 'radio' || this.control.type == 'checkbox'){\n        return this.control.checked;\n      }\n    } else if (this.control instanceof HTMLTextAreaElement) {\n      return this.control.value;\n    }\n    return false;\n  }\n  protected __Escape(text: string): string {\n    \n    const htmlEntities: Record<string, string> = {\n      \"&\": \"&amp;\",\n      \"<\": \"&lt;\",\n      \">\": \"&gt;\",\n      '\"': \"&quot;\",\n      \"'\": \"&#039;\"\n    };\n\n    return text.replace(/[&<>\"']/g, function (match) {\n      return htmlEntities[match];\n    });\n    \n  }\n \n  public Html(html: string | null = null): string | Widget {\n    if (html != null) {\n\n      this.control.innerHTML = html;\n\n      return this;\n    }\n    return this.control.innerHTML;;\n  }\n  public Text(text: string | null = null): string | Widget {\n    if (text != null) {\n      this.control.innerHTML = this.__Escape(text);\n      return this;\n    }\n    return this.control.innerText;\n  }\n  public Show(): Widget {\n    this.control.style.display = '';\n    \n    return this;\n  }\n  public Hide(): Widget {\n    this.control.style.display = 'none';\n    return this;\n  }\n  \n  public Add(widget: Widget | Widget[]): Widget {\n    if (widget instanceof Widget) {\n      this.widgets.push(widget);\n      this.control.appendChild(widget.control);\n    } else if (widget instanceof Array) {\n      for (const item of widget) {\n        if (item instanceof Widget) {\n          this.widgets.push(item);\n          this.control.appendChild(item.control);\n        }\n      }\n    }\n    return this;\n  }\n\n  public Prepend(widget: Widget | Widget[]): Widget {\n    if (widget instanceof Widget) {\n      this.widgets.push(widget);\n      this.control.prepend(widget.control);\n    } else if (widget instanceof Array) {\n      for (const item of widget) {\n        if (item instanceof Widget) {\n          this.widgets.push(item);\n          this.control.prepend(item.control);\n        }\n      }\n    }\n    return this;\n  }\n\n  public AddEventListener(evt: string, fn: EventListenerOrEventListenerObject): Widget {\n    this.control.addEventListener(evt, fn);\n\n    //this.events_list.push(Ceven [evt, fn]);\n    this.events_list.push([evt, fn])\n    return this;\n  }\n\n  private RemoveEvents(): Widget {\n    for (const item of this.events_list) {\n      console.log(`Clean up: ${item[0]} - ${item[1]}`);\n      this.control.removeEventListener(item[0], item[1]);\n    }\n    //this.events_list = [];\n    this.events_list.length = 0;\n    return this;\n  }\n\n}\nclass html extends Widget { constructor() { super(\"html\"); } }\nclass head extends Widget { constructor() { super(\"head\"); } }\nclass body extends Widget { constructor() { super(\"body\"); } }\nclass title extends Widget { constructor() { super(\"title\"); } }\nclass base extends Widget { constructor() { super(\"base\"); } }\nclass link extends Widget { constructor() { super(\"link\"); } }\nclass meta extends Widget { constructor() { super(\"meta\"); } }\nclass style extends Widget { constructor() { super(\"style\"); } }\nclass script extends Widget { constructor() { super(\"script\"); } }\nclass noscript extends Widget { constructor() { super(\"noscript\"); } }\nclass template extends Widget { constructor() { super(\"template\"); } }\nclass section extends Widget { constructor() { super(\"section\"); } }\nclass nav extends Widget { constructor() { super(\"nav\"); } }\nclass article extends Widget { constructor() { super(\"article\"); } }\nclass aside extends Widget { constructor() { super(\"aside\"); } }\nclass h1 extends Widget { constructor() { super(\"h1\"); } }\nclass h2 extends Widget { constructor() { super(\"h2\"); } }\nclass h3 extends Widget { constructor() { super(\"h3\"); } }\nclass h4 extends Widget { constructor() { super(\"h4\"); } }\nclass h5 extends Widget { constructor() { super(\"h5\"); } }\nclass h6 extends Widget { constructor() { super(\"h6\"); } }\nclass header extends Widget { constructor() { super(\"header\"); } }\nclass footer extends Widget { constructor() { super(\"footer\"); } }\nclass address extends Widget { constructor() { super(\"address\"); } }\nclass p extends Widget { constructor() { super(\"p\"); } }\nclass hr extends Widget { constructor() { super(\"hr\"); } }\nclass pre extends Widget { constructor() { super(\"pre\"); } }\nclass blockquote extends Widget { constructor() { super(\"blockquote\"); } }\nclass ol extends Widget { constructor() { super(\"ol\"); } }\nclass ul extends Widget { constructor() { super(\"ul\"); } }\nclass li extends Widget { constructor() { super(\"li\"); } }\nclass dl extends Widget { constructor() { super(\"dl\"); } }\nclass dt extends Widget { constructor() { super(\"dt\"); } }\nclass dd extends Widget { constructor() { super(\"dd\"); } }\nclass figure extends Widget { constructor() { super(\"figure\"); } }\nclass figcaption extends Widget { constructor() { super(\"figcaption\"); } }\nclass main extends Widget { constructor() { super(\"main\"); } }\nclass div extends Widget { constructor() { super(\"div\"); } }\nclass a extends Widget { constructor() { super(\"a\"); } }\nclass em extends Widget { constructor() { super(\"em\"); } }\nclass strong extends Widget { constructor() { super(\"strong\"); } }\nclass small extends Widget { constructor() { super(\"small\"); } }\nclass s extends Widget { constructor() { super(\"s\"); } }\nclass cite extends Widget { constructor() { super(\"cite\"); } }\nclass q extends Widget { constructor() { super(\"q\"); } }\nclass dfn extends Widget { constructor() { super(\"dfn\"); } }\nclass abbr extends Widget { constructor() { super(\"abbr\"); } }\nclass ruby extends Widget { constructor() { super(\"ruby\"); } }\nclass rt extends Widget { constructor() { super(\"rt\"); } }\nclass rp extends Widget { constructor() { super(\"rp\"); } }\nclass b extends Widget { constructor() { super(\"b\"); } }\nclass i extends Widget { constructor() { super(\"i\"); } }\nclass u extends Widget { constructor() { super(\"u\"); } }\nclass mark extends Widget { constructor() { super(\"mark\"); } }\nclass bdi extends Widget { constructor() { super(\"bdi\"); } }\nclass bdo extends Widget { constructor() { super(\"bdo\"); } }\nclass span extends Widget { constructor() { super(\"span\"); } }\nclass br extends Widget { constructor() { super(\"br\"); } }\nclass wbr extends Widget { constructor() { super(\"wbr\"); } }\nclass ins extends Widget { constructor() { super(\"ins\"); } }\nclass del extends Widget { constructor() { super(\"del\"); } }\nclass img extends Widget { constructor() { super(\"img\"); } }\nclass iframe extends Widget { constructor() { super(\"iframe\"); } }\nclass embed extends Widget { constructor() { super(\"embed\"); } }\nclass param extends Widget { constructor() { super(\"param\"); } }\nclass video extends Widget { constructor() { super(\"video\"); } }\nclass audio extends Widget { constructor() { super(\"audio\"); } }\nclass source extends Widget { constructor() { super(\"source\"); } }\nclass track extends Widget { constructor() { super(\"track\"); } }\nclass canvas extends Widget { constructor() { super(\"canvas\"); } }\nclass map extends Widget { constructor() { super(\"map\"); } }\nclass area extends Widget { constructor() { super(\"area\"); } }\nclass svg extends Widget { constructor() { super(\"svg\"); } }\nclass math extends Widget { constructor() { super(\"math\"); } }\nclass table extends Widget { constructor() { super(\"table\"); } }\nclass caption extends Widget { constructor() { super(\"caption\"); } }\nclass colgroup extends Widget { constructor() { super(\"colgroup\"); } }\nclass col extends Widget { constructor() { super(\"col\"); } }\nclass tbody extends Widget { constructor() { super(\"tbody\"); } }\nclass thead extends Widget { constructor() { super(\"thead\"); } }\nclass tfoot extends Widget { constructor() { super(\"tfoot\"); } }\nclass tr extends Widget { constructor() { super(\"tr\"); } }\nclass td extends Widget { constructor() { super(\"td\"); } }\nclass th extends Widget { constructor() { super(\"th\"); } }\nclass form extends Widget { constructor() { super(\"form\"); } }\nclass label extends Widget { constructor() { super(\"label\"); } }\nclass input extends Widget { constructor() { super(\"input\"); } }\nclass button extends Widget { constructor() { super(\"button\"); } }\nclass select extends Widget { constructor() { super(\"select\"); } }\nclass datalist extends Widget { constructor() { super(\"datalist\"); } }\nclass optgroup extends Widget { constructor() { super(\"optgroup\"); } }\nclass option extends Widget { constructor() { super(\"option\"); } }\nclass textarea extends Widget { constructor() { super(\"textarea\"); } }\nclass fieldset extends Widget { constructor() { super(\"fieldset\"); } }\nclass legend extends Widget { constructor() { super(\"legend\"); } }\nclass progress extends Widget { constructor() { super(\"progress\"); } }\nclass meter extends Widget { constructor() { super(\"meter\"); } }\nclass output extends Widget { constructor() { super(\"output\"); } }\nclass details extends Widget { constructor() { super(\"details\"); } }\nclass summary extends Widget { constructor() { super(\"summary\"); } }\nclass dialog extends Widget { constructor() { super(\"dialog\"); } }\nclass center extends Widget { constructor() { super(\"center\"); } }\n\n\n\nclass Window extends Widget {\n  static obj: Window\n  constructor(param: {\n    app: string | null,\n    title: string | null,\n    width: string | null,\n    height: string | null\n  } | null = null) {\n    super('div');\n    if (typeof(Window.obj) == 'undefined') {\n      this.AddStyle({\n        width: '100%',\n        height: '100%',\n        position: 'relative'\n      });\n      if (typeof (param) == 'object') {\n        //const { app = null, title = '', width = null, height = null } = param;\n      }\n      this.Hide();\n      this.body.appendChild(this.control);\n      Window.obj = this;\n    }\n  }\n  public Navigate(obj: Widget | Widget[]) {\n    Window.obj.Clear();\n    Window.obj.Add(obj);\n    return this;\n  }\n  public Run() {\n    Window.obj.Show();\n    return this;\n  }\n}\n\n\n\n\n\nclass FileManager {\n\n  public s2ab(s: string): ArrayBuffer {\n    var buf = new ArrayBuffer(s.length);\n    var view = new Uint8Array(buf);\n    for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n    return buf;\n  }\n\n  public getBlob(app: { base64: string | null, type: string | null }) {\n\n    const mtype: string = app.type || \"application/json\";\n    if (app.base64 != null) {\n      const blob = new Blob([this.s2ab(atob(app.base64))], {\n        type: mtype\n      });\n\n      return blob;\n    }\n  }\n}\n\nclass Http {\n  xml: XMLHttpRequest;\n  body: string | FormData | null;\n\n  constructor(param: { method: string, url: string, body: string | null | FormData | { [index: string]: string }, header: { [index: string]: string } }) {\n    let { method = 'GET', url = '', body = null, header = {} } = param;\n    this.body = null;\n    this.xml = new XMLHttpRequest();\n    this.xml.open(method, url, true);\n    if (typeof (header) == 'object') {\n      if (body instanceof FormData) {\n        // this is a file\n        //header[\"Content-Type\"] = \"multipart/form-data\";\n        delete header[\"Content-Type\"];\n      }\n      else if (typeof (body) === \"object\") {\n        header[\"Content-Type\"] = \"application/json\";\n        body = JSON.stringify(body);\n      }\n      for (const key in header) {\n        this.xml.setRequestHeader(key, header[key]);\n      }\n    }\n    if (typeof (body) == 'string') {\n      this.body = body;\n    }\n  }\n  public async Load<T>(): Promise<T> {\n    this.xml.send(this.body);\n    const promise = new Promise<T>((resolve, reject) => {\n      this.xml.addEventListener('load', function () {\n        resolve(this.response);\n      });\n      this.xml.addEventListener('error', function () {\n        resolve((null as T));\n      });\n    });\n    return await promise;\n  }\n\n  public Then(fn: (response: any) => void): void {\n    this.xml.addEventListener('load', (e) => {\n      fn(this.xml.response);\n    });\n  }\n\n  public Progress(fn: Function): void {\n    if (typeof (fn) == 'function') {\n      this.xml.addEventListener('progress', (e) => {\n        fn(e);\n      });\n    }\n  }\n  public UploadProgress(fn: Function): void {\n    if (typeof (fn) == 'function') {\n      this.xml.upload.addEventListener('progress', (e) => {\n        fn(e);\n      });\n    }\n  }\n}\n\n\nclass DateCore {\n  names: { [index: number]: string }\n\n  constructor() {\n\n    this.names = {\n      0: \"Sunday\",\n      1: \"Monday\",\n      2: \"Tuesday\",\n      3: \"Wednesday\",\n      4: \"Thursday\",\n      5: \"Friday\",\n      6: \"Saturday\"\n    };\n\n  }\n\n  public DateCheck(frm: string, t: string): [boolean, number, string[]] {\n    var from_d = frm;\n    var to_d = t;\n\n    const b: [boolean, number, string[]] = [false, 0, []];\n\n    if (from_d == '' || to_d == '') {\n      return b;\n    }\n\n    b[0] = true;\n\n    var f = new Date(from_d);\n    var e = new Date(to_d);\n    var i = 0;\n    while (f <= e) {\n      var m = (f.getMonth() + 1) < 10 ? '0' + (f.getMonth() + 1) : (f.getMonth() + 1);\n      var day = f.getDate() < 10 ? '0' + f.getDate() : f.getDate();\n\n      var d = f.getFullYear().toString() + \"-\" + m + \"-\" + day;\n      b[2].push(d);\n      var ndate = f.setDate(f.getDate() + 1);\n      f = new Date(ndate);\n      i++;\n    }\n    b[1] = i;\n\n    return b;\n  }\n\n  GetDay(date_str: string) {\n    return this.names[new Date(date_str).getDay()];\n  }\n}\n\n\n\n\n//   class IDB {\n//     constructor(db = null, tbl = null, version = 1) {\n\n//       const dbName = db == null ? \"db\" : db;\n//       const table = tbl == null ? \"table\": tbl;\n//       const dbVersion = version; // Versioning is required for schema updates.\n\n//       const request = indexedDB.open(dbName, dbVersion);\n\n//       request.onupgradeneeded = function (event) {\n//         const db = event.target.result;\n//         // Create an object store named 'users' with 'id' as the keyPath\n//         if (!db.objectStoreNames.contains(table)) {\n//           db.createObjectStore(table, { keyPath: \"id\" });\n//         }\n//       };\n\n//       request.onsuccess = function (event) {\n//         const db = event.target.result;\n//       };\n\n//       request.onerror = function (event) {\n//         console.error(\"Error opening database:\", event.target.errorCode);\n//       };\n\n//       this.dbname = dbName;\n//       this.version = dbVersion;\n//       this.table = table;\n//     }\n\n//     async add(data_obj) {\n//       const request = indexedDB.open(this.dbname, this.version);\n\n//       const promise = new Promise((resolve, reject) => {\n//         request.onsuccess = (event) => { // Use an arrow function here\n//           const db = event.target.result;\n//           const transaction = db.transaction(this.table, \"readwrite\");\n//           const objectStore = transaction.objectStore(this.table);\n\n//           const request = objectStore.add(data_obj);\n\n//           request.onsuccess = () => { // Use an arrow function here\n//             // Fixed to use data_obj instead of user\n//             resolve(true);\n//           };\n\n//           request.onerror = (event) => { // Use an arrow function here\n//             resolve(null);\n//           };\n//         };\n//       });\n//       return promise;\n//     }\n\n//     async update(id, data_obj) {\n//       const request = indexedDB.open(this.dbname, this.version);\n//       const promise = new Promise((resolve, reject) => {\n//         request.onsuccess = (event) => {\n//           const db = event.target.result;\n//           const transaction = db.transaction(this.table, \"readwrite\");\n//           const objectStore = transaction.objectStore(this.table);\n\n//           const getrequest = objectStore.get(id);\n\n//           getrequest.onsuccess = (event) => {\n//             const old_data = event.target.result;\n//             const updateRequest = objectStore.put({ ...old_data, ...data_obj });\n\n//             updateRequest.onsuccess = () => {\n//               resolve(true);\n//             };\n\n//             updateRequest.onerror = (event) => {\n//               resolve(null);\n//             };\n//           };\n\n//           getrequest.onerror = (event) => {\n//             resolve(null);\n//           };\n//         };\n\n//         request.onerror = (event) => {\n//           resolve(null);\n//         };\n//       });\n//       return promise;\n//     }\n\n//     async get(id) {\n//       const request = indexedDB.open(this.dbname, this.version);\n\n//       const promise = new Promise((resolve, reject) => {\n\n//         request.onsuccess = (event) => {\n//           const db = event.target.result;\n//           const transaction = db.transaction(this.table, \"readonly\");\n//           const objectStore = transaction.objectStore(this.table);\n\n//           const getrequest = objectStore.get(id);\n\n//           getrequest.onsuccess = (event) => {\n//             const data = event.target.result;\n//             resolve(data);\n//           };\n\n//           getrequest.onerror = (event) => {\n//             resolve(null);\n//           };\n//         };\n\n//         request.onerror = (event) => {\n//           resolve(null);\n//         };\n//       });\n\n//       return promise;\n//     }\n\n//     async getAll() {\n//       const request = indexedDB.open(this.dbname, this.version);\n\n//       const promise = new Promise((resolve, reject) => {\n\n//         request.onsuccess = (event) => {\n//           const db = event.target.result;\n//           const transaction = db.transaction(this.table, \"readonly\");\n//           const objectStore = transaction.objectStore(this.table);\n\n//           const getAllRequest = objectStore.getAll();\n\n//           getAllRequest.onsuccess = (event) => {\n//             const data = event.target.result;\n//             resolve(data);\n//           };\n\n//           getAllRequest.onerror = (event) => {\n//             resolve(null);\n//           };\n//         };\n\n//         request.onerror = (event) => {\n//           resolve(null);\n//         };\n\n//       });\n\n//       return promise;\n\n//     }\n\n//     async delete(id) {\n//       const request = indexedDB.open(this.dbname, this.version);\n//       const promise = new Promise((resolve, reject) => {\n//         request.onsuccess = (event) => {\n//             const db = event.target.result;\n//             const transaction = db.transaction(this.table, \"readwrite\");\n//             const objectStore = transaction.objectStore(this.table);\n\n//             const deleteRequest = objectStore.delete(id);\n\n//             deleteRequest.onsuccess = () => {\n//                 resolve(true);\n//             };\n\n//             deleteRequest.onerror = (event) => {\n//                 resolve(null);\n//             };\n//         };\n\n//         request.onerror = (event) => {\n//             resolve(null);\n//         };\n//       });\n//     return promise;\n//   }\n\n//   async deleteAll() {\n//     const request = indexedDB.open(this.dbname, this.version);\n\n//     const promise = new Promise((resolve, reject) => {\n\n//       request.onsuccess = (event) => {\n//           const db = event.target.result;\n//           const transaction = db.transaction(this.table, \"readwrite\");\n//           const objectStore = transaction.objectStore(this.table);\n\n//           const clearRequest = objectStore.clear();\n\n//           clearRequest.onsuccess = () => {\n//               resolve(true);\n//           };\n\n//           clearRequest.onerror = (event) => {\n//             resolve(null);\n//           };\n//       };\n\n//       request.onerror = (event) => {\n//           resolve(null);\n//       };\n//     });\n//     return promise;\n//   }\n\n\n// }\n\n\nexport { DateCore }\nexport { Widget };\nexport {\n  html, head, body, title, base, link, meta, style, script, noscript, template,\n  section, nav, article, aside, h1, h2, h3, h4, h5, h6, header, footer, address,\n  p, hr, pre, blockquote, ol, ul, li, dl, dt, dd, figure, figcaption, main, div,\n  a, em, strong, small, s, cite, q, dfn, abbr, ruby, rt, rp, b, i, u, mark, bdi,\n  bdo, span, br, wbr, ins, del, img, iframe, embed, param, video, audio,\n  source, track, canvas, map, area, svg, math, table, caption, colgroup, col,\n  tbody, thead, tfoot, tr, td, th, form, label, input, button, select, datalist,\n  optgroup, option, textarea, fieldset, legend, progress, meter, output, details,\n  summary, dialog, center\n};\nexport {\n  Window,\n  Http,\n  FileManager\n};", "import { a, button, col, div, fieldset, h4, input, label, legend, li, option, select, span, table, tbody, td, textarea, th, thead, tr, u, ul, Widget } from \"./core.mts\";\n\nenum Icons {\n  Asterisk = 'asterisk',\n  Plus = 'plus',\n  Minus = 'minus',\n  Euro = 'euro',\n  Cloud = 'cloud',\n  Envelope = 'envelope',\n  Pencil = 'pencil',\n  Glass = 'glass',\n  Music = 'music',\n  Search = 'search',\n  Heart = 'heart',\n  Star = 'star',\n  StarEmpty = 'star-empty',\n  User = 'user',\n  Film = 'film',\n  ThLarge = 'th-large',\n  Th = 'th',\n  ThList = 'th-list',\n  Ok = 'ok',\n  Remove = 'remove',\n  ZoomIn = 'zoom-in',\n  ZoomOut = 'zoom-out',\n  Off = 'off',\n  Signal = 'signal',\n  Cog = 'cog',\n  Trash = 'trash',\n  Home = 'home',\n  File = 'file',\n  Time = 'time',\n  Road = 'road',\n  DownloadAlt = 'download-alt',\n  Download = 'download',\n  Upload = 'upload',\n  Inbox = 'inbox',\n  PlayCircle = 'play-circle',\n  Repeat = 'repeat',\n  Refresh = 'refresh',\n  ListAlt = 'list-alt',\n  Lock = 'lock',\n  Flag = 'flag',\n  Headphones = 'headphones',\n  VolumeOff = 'volume-off',\n  VolumeDown = 'volume-down',\n  VolumeUp = 'volume-up',\n  QRCode = 'qrcode',\n  Barcode = 'barcode',\n  Tag = 'tag',\n  Tags = 'tags',\n  Book = 'book',\n  Bookmark = 'bookmark',\n  Print = 'print',\n  Camera = 'camera',\n  Font = 'font',\n  Bold = 'bold',\n  Italic = 'italic',\n  TextHeight = 'text-height',\n  TextWidth = 'text-width',\n  AlignLeft = 'align-left',\n  AlignCenter = 'align-center',\n  AlignRight = 'align-right',\n  AlignJustify = 'align-justify',\n  List = 'list',\n  IndentLeft = 'indent-left',\n  IndentRight = 'indent-right',\n  FacetimeVideo = 'facetime-video',\n  Picture = 'picture',\n  MapMarker = 'map-marker',\n  Adjust = 'adjust',\n  Tint = 'tint',\n  Edit = 'edit',\n  Share = 'share',\n  Check = 'check',\n  Move = 'move',\n  StepBackward = 'step-backward',\n  FastBackward = 'fast-backward',\n  Backward = 'backward',\n  Play = 'play',\n  Pause = 'pause',\n  Stop = 'stop',\n  Forward = 'forward',\n  FastForward = 'fast-forward',\n  StepForward = 'step-forward',\n  Eject = 'eject',\n  ChevronLeft = 'chevron-left',\n  ChevronRight = 'chevron-right',\n  PlusSign = 'plus-sign',\n  MinusSign = 'minus-sign',\n  RemoveSign = 'remove-sign',\n  OkSign = 'ok-sign',\n  QuestionSign = 'question-sign',\n  InfoSign = 'info-sign',\n  Screenshot = 'screenshot',\n  RemoveCircle = 'remove-circle',\n  OkCircle = 'ok-circle',\n  BanCircle = 'ban-circle',\n  ArrowLeft = 'arrow-left',\n  ArrowRight = 'arrow-right',\n  ArrowUp = 'arrow-up',\n  ArrowDown = 'arrow-down',\n  ShareAlt = 'share-alt',\n  ResizeFull = 'resize-full',\n  ResizeSmall = 'resize-small',\n  ExclamationSign = 'exclamation-sign',\n  Gift = 'gift',\n  Leaf = 'leaf',\n  Fire = 'fire',\n  EyeOpen = 'eye-open',\n  EyeClose = 'eye-close',\n  WarningSign = 'warning-sign',\n  Plane = 'plane',\n  Calendar = 'calendar',\n  Random = 'random',\n  Comment = 'comment',\n  Magnet = 'magnet',\n  ChevronUp = 'chevron-up',\n  ChevronDown = 'chevron-down',\n  Retweet = 'retweet',\n  ShoppingCart = 'shopping-cart',\n  FolderClose = 'folder-close',\n  FolderOpen = 'folder-open',\n  ResizeVertical = 'resize-vertical',\n  ResizeHorizontal = 'resize-horizontal',\n  HDD = 'hdd',\n  Bullhorn = 'bullhorn',\n  Bell = 'bell',\n  Certificate = 'certificate',\n  ThumbsUp = 'thumbs-up',\n  ThumbsDown = 'thumbs-down',\n  HandRight = 'hand-right',\n  HandLeft = 'hand-left',\n  HandUp = 'hand-up',\n  HandDown = 'hand-down',\n  CircleArrowRight = 'circle-arrow-right',\n  CircleArrowLeft = 'circle-arrow-left',\n  CircleArrowUp = 'circle-arrow-up',\n  CircleArrowDown = 'circle-arrow-down',\n  Globe = 'globe',\n  Wrench = 'wrench',\n  Tasks = 'tasks',\n  Filter = 'filter',\n  Briefcase = 'briefcase',\n  Fullscreen = 'fullscreen',\n  Dashboard = 'dashboard',\n  Paperclip = 'paperclip',\n  HeartEmpty = 'heart-empty',\n  Link = 'link',\n  Phone = 'phone',\n  Pushpin = 'pushpin',\n  USD = 'usd',\n  GBP = 'gbp',\n  Sort = 'sort',\n  SortByAlphabet = 'sort-by-alphabet',\n  SortByAlphabetAlt = 'sort-by-alphabet-alt',\n  SortByOrder = 'sort-by-order',\n  SortByOrderAlt = 'sort-by-order-alt',\n  SortByAttributes = 'sort-by-attributes',\n  SortByAttributesAlt = 'sort-by-attributes-alt',\n  Unchecked = 'unchecked',\n  Expand = 'expand',\n  CollapseDown = 'collapse-down',\n  CollapseUp = 'collapse-up',\n  LogIn = 'log-in',\n  Flash = 'flash',\n  LogOut = 'log-out',\n  NewWindow = 'new-window',\n  Record = 'record',\n  Save = 'save',\n  Open = 'open',\n  Saved = 'saved',\n  Import = 'import',\n  Export = 'export',\n  Send = 'send',\n  FloppyDisk = 'floppy-disk',\n  FloppySaved = 'floppy-saved',\n  FloppyRemove = 'floppy-remove',\n  FloppySave = 'floppy-save',\n  FloppyOpen = 'floppy-open',\n  CreditCard = 'credit-card',\n  Transfer = 'transfer',\n  Cutlery = 'cutlery',\n  Header = 'header',\n  Compressed = 'compressed',\n  Earphone = 'earphone',\n  PhoneAlt = 'phone-alt',\n  Tower = 'tower',\n  Stats = 'stats',\n  SDVideo = 'sd-video',\n  HDVideo = 'hd-video',\n  Subtitles = 'subtitles',\n  SoundStereo = 'sound-stereo',\n  SoundDolby = 'sound-dolby',\n  Sound51 = 'sound-5-1',\n  Sound61 = 'sound-6-1',\n  Sound71 = 'sound-7-1',\n  CopyrightMark = 'copyright-mark',\n  RegistrationMark = 'registration-mark',\n  CloudDownload = 'cloud-download',\n  CloudUpload = 'cloud-upload',\n  TreeConifer = 'tree-conifer',\n  TreeDeciduous = 'tree-deciduous',\n  CD = 'cd',\n  SaveFile = 'save-file',\n  OpenFile = 'open-file',\n  LevelUp = 'level-up',\n  Copy = 'copy',\n  Paste = 'paste',\n  Alert = 'alert',\n  Equalizer = 'equalizer',\n  King = 'king',\n  Queen = 'queen',\n  Pawn = 'pawn',\n  Bishop = 'bishop',\n  Knight = 'knight',\n  BabyFormula = 'baby-formula',\n  Tent = 'tent',\n  Blackboard = 'blackboard',\n  Bed = 'bed',\n  Apple = 'apple',\n  Erase = 'erase',\n  Hourglass = 'hourglass',\n  Lamp = 'lamp',\n  Duplicate = 'duplicate',\n  PiggyBank = 'piggy-bank',\n  Scissors = 'scissors',\n  Bitcoin = 'bitcoin',\n  Yen = 'yen',\n  Ruble = 'ruble',\n  Scale = 'scale',\n  IceLolly = 'ice-lolly',\n  IceLollyTasted = 'ice-lolly-tasted',\n  Education = 'education',\n  OptionHorizontal = 'option-horizontal',\n  OptionVertical = 'option-vertical',\n  MenuHamburger = 'menu-hamburger',\n  ModalWindow = 'modal-window',\n  Oil = 'oil',\n  Grain = 'grain',\n  Sunglasses = 'sunglasses',\n  TextSize = 'text-size',\n  TextColor = 'text-color',\n  TextBackground = 'text-background',\n  ObjectAlignTop = 'object-align-top',\n  ObjectAlignBottom = 'object-align-bottom',\n  ObjectAlignHorizontal = 'object-align-horizontal',\n  ObjectAlignLeft = 'object-align-left',\n  ObjectAlignVertical = 'object-align-vertical',\n  ObjectAlignRight = 'object-align-right',\n  TriangleRight = 'triangle-right',\n  TriangleLeft = 'triangle-left',\n  TriangleBottom = 'triangle-bottom',\n  TriangleTop = 'triangle-top',\n  Superscript = 'superscript',\n  Subscript = 'subscript',\n  MenuLeft = 'menu-left',\n  MenuRight = 'menu-right',\n  MenuDown = 'menu-down',\n  MenuUp = 'menu-up',\n}\n\nenum InputType {\n  Text = \"text\",\n  Password = \"password\",\n  Email = \"email\",\n  Number = \"number\",\n  URL = \"url\",\n  Telephone = \"tel\",\n  Search = \"search\",\n  Date = \"date\",\n  DateTimeLocal = \"datetime-local\",\n  Month = \"month\",\n  Week = \"week\",\n  Time = \"time\",\n  Color = \"color\",\n  File = \"file\",\n  Range = \"range\",\n  Checkbox = \"checkbox\",\n  Radio = \"radio\",\n  Hidden = \"hidden\",\n  Submit = \"submit\",\n  Reset = \"reset\",\n  Button = \"button\",\n}\n\nenum Color {\n  Default = 'default',\n  Primary = 'primary',\n  Secondary = 'secondary',\n  Success = 'success',\n  Info = 'info',\n  Warning = 'warning',\n  Danger = 'danger',\n  Link = 'link',\n  Dark = 'dark',\n  Light = 'light',\n  Muted = 'Muted',\n  White = 'white'\n}\n\nenum Size {\n  Lg = \"lg\",\n  Sm = \"sm\",\n  Xs = \"xs\",\n  Md = \"md\"\n}\n\nenum Message {\n  Success = \"success\",\n  Danger = \"error\",\n  Warning = \"warning\"\n}\n\nenum Flex {\n  Center = 'center',\n  Stretch = 'stretch',\n  FlexStart = 'flex-start',\n  FlexEnd = 'flex-end',\n  SpaceAround = 'space-around',\n  SpaceBetween = 'space-between',\n  SpaceEvenly = 'space-evenly'\n}\n\nclass Text extends div {\n  constructor(option: {text: string, textColor?: Color, textOverflow?: boolean, width?: number } | (string|number)) {\n    super();\n    if (typeof(option) == 'object') {\n      const {text, textColor, textOverflow, width} = option;\n      super.Text(text);\n\n      if (textColor != undefined) {\n        super.AddClass(`text-${textColor}`);\n      }\n\n      super.AddStyle({display: 'inline-block'});\n\n      if (textOverflow != undefined && textOverflow) {\n        super.AddStyle({\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis'\n        });\n\n      }\n\n      if (width != undefined) {\n        super.AddStyle({\n          width: `${width}px`\n        });\n      }\n    } else if (typeof(option) == 'string') {\n      super.Text(option);\n    } else if (typeof(option) == 'number') {\n      super.Text(option.toString());\n    }\n    \n  }\n}\n\nclass Html extends span {\n  constructor(option: {text: string, textColor?: Color}|string) {\n    super();\n    if (typeof(option) == 'object') {\n      const {text, textColor} = option;\n      super.Html(text);\n      if (textColor != undefined) {\n        super.AddClass(`text-${textColor}`);\n      }\n    } else if (typeof(option) == 'string') {\n      super.Html(option);\n    }\n  \n  }\n}\n\nclass Badge extends span {\n  constructor(o: {\n    text: string | Widget\n  }) {\n    super();\n    super.AddClass(\"badge\");\n    if (o.text != undefined) {\n\n      if (typeof(o.text) == \"string\") {\n        super.Add(new Text({text: o.text}));\n      } else {\n        super.Add(o.text);\n      }\n    }\n\n  }\n}\n\nclass Label extends span {\n  constructor(o: {\n    text: string | Widget,\n    color?: Color\n  }) {\n    super();\n    super.AddClass(\"label\");\n    if (o.text != undefined) {\n\n      if (typeof(o.text) == \"string\") {\n        super.Add(new Text({text: o.text}));\n      } else {\n        super.Add(o.text);\n      }\n    }\n\n    if (o.color != undefined) {\n      super.AddClass(\"label-\" + o.color);\n    }\n  }\n}\n\n\nclass Button extends button {\n  constructor(o : {  \n    text: Widget | string,\n    color?: Color,\n    size?: Size,\n    block?: boolean\n  }) {\n    super();\n\n    if (o.color != undefined) {\n      super.AddClass([\"btn\", \"btn-\" + o.color]);\n    }\n\n    if (o.size != undefined) {\n      super.AddClass([\"btn-\" + o.size]);\n    }\n\n    if (typeof(o.text) == \"string\") {\n      super.Add(new Html({text: o.text}));\n    } else {\n      super.Add(o.text);\n    }\n\n    if (o.block != undefined && o.block) {\n      super.AddClass(\"btn-block\");\n    }\n\n  }\n\n  enable(ok: boolean) {\n    super.DeleteClass([\"active\", \"disabled\"]);\n    if (ok) {\n      super.AddClass(\"active\");\n    } else {\n      super.AddClass(\"disabled\");\n    }\n  }\n  \n}\n\nclass ButtonLink extends a {\n  constructor(o : {  \n    text: Widget | string,\n    color?: Color,\n    size?: Size,\n    block?: boolean\n  }) {\n    super();\n\n    if (o.color != undefined) {\n      super.AddClass([\"btn\", \"btn-\" + o.color]);\n    }\n\n    if (o.size != undefined) {\n      super.AddClass([\"btn-\" + o.size]);\n    }\n\n    if (typeof(o.text) == \"string\") {\n      super.Add(new Html({text: o.text}));\n    } else {\n      super.Add(o.text);\n    }\n\n    if (o.block != undefined && o.block) {\n      super.AddClass(\"btn-block\");\n    }\n\n  }\n\n  enable(ok: boolean) {\n    super.DeleteClass([\"active\", \"disabled\"]);\n    if (ok) {\n      super.AddClass(\"active\");\n    } else {\n      super.AddClass(\"disabled\");\n    }\n  }\n  \n}\n\nclass ProgressBar extends div {\n  bar: div;\n  constructor(o: {\n    color?: Color,\n    striped?: boolean,\n    animation?: boolean\n  }) {\n    super();\n\n    // <div class=\"progress\">\n//   <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"70\"\n//   aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width:70%\">\n//     <span class=\"sr-only\">70% Complete</span>\n//   </div>\n// </div>\n\n    super.AddClass(\"progress\");\n\n    this.bar = new div().AddClass(\"progress-bar\");\n    \n    this.bar.AddAttr({\n      role: \"progressbar\",\n      \"aria-valuenow\": \"0\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n    });\n\n    this.bar.AddStyle({\n      width: \"0%\"\n    });;\n\n    super.Add(this.bar);\n\n    if (o.color != undefined) {\n      this.bar.AddClass(`progress-bar-${o.color}`);\n    }\n\n    if (o.striped != undefined && o.striped) {\n      this.bar.AddClass([`progress-bar-striped`]);\n    }\n    if (o.animation != undefined && o.animation) {\n      this.bar.AddClass(\"active\");\n    }\n  }\n\n  update(percent: number, showText: boolean = false) {\n    this.bar.AddStyle(`${percent}%`);\n    this.bar.AddAttr({\n      \"aria-valuenow\": `${percent}`,\n    });\n    this.bar.AddStyle({\n      width: `${percent}%`\n    });\n\n    if (showText) {\n      this.bar.Clear();\n      this.bar.Add(new Text(`${percent}%`));\n    }\n  }\n\n}\n\nclass Pagination extends ul {\n  list: li[]\n  constructor(o: {\n    size?: Size\n  }) {\n    super();\n    super.AddClass(\"pagination\");\n  \n    if (o.size != undefined) {\n      super.AddClass(`pagination-${o.size}`);\n    }\n\n    this.list = [];\n  }\n  add(num: number, fn?: (n: number) => void) {\n\n    const aa = new a();\n    const ll = new li().Add(aa);\n\n    this.list.push(ll);\n\n    super.Add(ll);\n    aa.AddAttr({href: \"#\"});\n    aa.Add(new Text(`${num}`));\n\n    if ( fn != undefined )\n    aa.AddEventListener(\"click\", () => {\n\n      for (const item of this.list) {\n        item.DeleteClass(\"active\");\n      }\n      \n      ll.AddClass(\"active\");\n      fn(num);\n    });\n\n    return this;\n  }\n\n  clear() {\n    for (const item of this.list) {\n      item.Delete();\n    }\n    this.list = [];\n  }\n\n}\n\n\nclass BreadCrumb extends ul {\n  list: li[]\n  constructor(o: {\n  }) {\n    super();\n    super.AddClass(\"breadcrumb\");\n\n    this.list = [];\n  }\n  add(title: string, fn?: (n: string) => void) {\n\n    const aa = new a();\n    const ll = new li().Add(aa);\n\n    this.list.push(ll);\n\n    super.Add(ll);\n    aa.AddAttr({href: \"#\"});\n    const h = new span()\n    h.Html(title);\n    aa.Add(h);\n\n    if ( fn != undefined )\n    aa.AddEventListener(\"click\", () => {\n\n      for (const item of this.list) {\n        item.DeleteClass(\"active\");\n      }\n      \n      ll.AddClass(\"active\");\n      fn(title);\n    });\n\n    return this;\n  }\n\n  clear() {\n    for (const item of this.list) {\n      item.Delete();\n    }\n    this.list = [];\n  }\n  \n}\n\nclass Pager extends ul {\n  constructor(o: {\n    prevLabel?: string,\n    nextLabel?: string,\n    align?: boolean,\n    nextClicked: () => void,\n    prevClicked: () => void\n  }) {\n    super();\n    super.AddClass(\"pager\");\n\n    const prev = new li();\n    const prev_a = new a().AddAttr({\n      href: \"#\"\n    });\n    prev.Add(prev_a);\n    if (o.prevLabel == undefined) {\n      prev_a.Html(\"Previous\");\n    } else {\n      prev_a.Html(o.prevLabel);\n    }\n\n    prev_a.AddEventListener(\"click\", (e) => {\n      e.preventDefault();\n      o.prevClicked();\n    });\n\n    const next = new li();\n    const next_a = new a().AddAttr({\n      href: \"#\"\n    });\n    next.Add(next_a);\n    if (o.nextLabel == undefined) {\n      next_a.Html(\"Next\");\n    } else {\n      next_a.Html(o.nextLabel);\n    }\n\n    if (o.align != undefined && o.align) {\n      prev.AddClass(\"previous\");\n      next.AddClass(\"next\");\n    }\n\n    next_a.AddEventListener(\"click\", (e) => {\n      e.preventDefault();\n      o.nextClicked();\n    });\n\n    super.Add([prev, next]);\n  }\n}\n\nclass ListGroup extends ul {\n  constructor(o: {}) {\n    super();\n    super.AddClass(\"list-group\");\n\n  }\n\n  add(a: Widget|string, color?: Color) {\n    const ll = new li();\n    ll.AddClass(\"list-group-item\");\n    \n    super.Add(ll);\n    if (typeof(a) != \"string\") {\n      ll.Add(a);\n    } else {\n      ll.Add(new Html(a));\n    }\n\n    if (color != undefined) {\n      ll.AddClass(`list-group-item-${color}`);\n    }\n\n    return this;\n  }\n\n}\n\nclass Card extends div {\n  constructor(o: {\n    header: string | Widget,\n    color?: Color,\n    body: string | Widget\n    footer?: string | Widget,\n  }) {\n    super();\n    super.AddClass(\"panel\");\n\n    if (o.color != undefined) {\n      super.AddClass(\"panel-\" + o.color);\n    }\n\n    const panel_heading = new div().AddClass(\"panel-heading\");\n    if (typeof(o.header) == \"string\") {\n      panel_heading.Add(new Html(o.header));\n    } else {\n      panel_heading.Add(o.header);\n    }\n    super.Add(panel_heading);\n\n    // body\n    const body_panel = new div().AddClass(\"panel-body\");\n\n    if (typeof(o.body) == \"string\") {\n      body_panel.Add(new Html(o.body));\n    } else {\n      body_panel.Add(o.body);\n    }\n\n    super.Add(body_panel);\n\n    if (o.footer != undefined) {\n      const panel_footer = new div().AddClass(\"panel-footer\");\n      if (typeof(o.footer) == \"string\") {\n        panel_footer.Add(new Html(o.footer));\n      } else {\n        panel_footer.Add(o.footer);\n      }\n    \n      super.Add(panel_footer);\n    }\n  }\n\n}\n\nclass Tab extends ul {\n  list: li[]\n  content: div\n  constructor(o: {}) {\n    \n    super();\n    super.AddClass([\"nav\", \"nav-tabs\"]);\n\n    this.list = [];\n    this.content = new div();\n  }\n\n  add(title: string|Widget, fn?: () => void) {\n    const ll = new li().AddStyle({\n      cursor: \"pointer\"\n    });\n    const aa = new a();\n    ll.Add(aa);\n    if (typeof(title) == \"string\") {\n      aa.Add(new Html(title));\n    } else {\n      aa.Add(title);\n    }\n\n    if (fn != undefined) {\n      ll.AddEventListener(\"click\", () => {\n        for (const item of this.list) {\n          item.DeleteClass(\"active\");\n        }\n\n        ll.AddClass(\"active\");\n      });\n    }\n\n    this.list.push(ll);\n    \n    super.Add(ll);\n  }\n}\n\nclass Panel extends div {\n  constructor() {\n    super();\n  }\n}\n\nclass Icon extends span {\n  prev: string\n  constructor(icon: Icons) {\n    super();\n\n    this.prev = \"glyphicon-\" + icon;\n    \n    super.AddClass([\"glyphicon\", this.prev])\n  }\n\n  change(icon: Icons) {\n    super.DeleteClass(this.prev);\n    this.prev = \"glyphicon-\" + icon;\n    super.AddClass(this.prev);\n  }\n}\n\nclass Divider extends div {\n  constructor() {\n    super();\n    super.AddClass(\"divider\");\n  }\n}\n\nclass ButtonSplit extends div {\n  menu: ul\n  constructor(o: {\n    color: Color,\n    clicked?: () => void,\n    enable?: boolean\n  }) {\n    super();\n    super.AddClass(\"btn-group\");\n\n    const title = new ButtonLink({text: \"sample\", color: o.color});\n    if (o.enable != undefined) {\n      title.enable(o.enable);\n    }\n\n    const caret = new ButtonLink({\n      text: new span().AddClass(\"caret\"),\n      color: o.color\n    });\n\n    if (o.enable != undefined) {\n      caret.enable(o.enable);\n    }\n\n\n    caret.AddClass(\"dropdown-toggle\");\n    caret.AddAttr({\n      \"data-toggle\": \"dropdown\",\n      \"aria-expanded\": \"false\",\n      \"href\": \"#\"\n    });\n\n    this.menu = new ul();\n    this.menu.AddClass(\"dropdown-menu\");\n    this.menu.AddAttr({\n      role: \"menu\"\n    });\n\n    super.Add(title);\n    super.Add(caret);\n    super.Add(this.menu);\n\n    caret.AddEventListener(\"click\", (e) => {\n      e.preventDefault();\n      if (!super.HasClass(\"open\")) {\n        super.AddClass(\"open\");\n      } else {\n        super.DeleteClass(\"open\");\n      }\n    });\n\n    \n    title.AddEventListener(\"click\", () => {\n      if (o.clicked != undefined) {\n        o.clicked();\n      }\n    });\n    \n\n  }\n\n  add(title: string|Divider, fn?:() => void) {\n\n    const aa = new a().AddAttr({ href: \"#\" });\n    \n    \n    if (typeof(title) == \"string\") {\n      this.menu.Add(new li().Add(aa));\n      aa.Html(title);\n    } else {\n      this.menu.Add(new li().AddClass(\"divider\"));\n    }\n\n    if (fn != undefined) {\n      aa.AddEventListener(\"click\", (e) => {\n        e.preventDefault();\n        fn();\n        if (!super.HasClass(\"open\")) {\n          super.AddClass(\"open\");\n        } else {\n          super.DeleteClass(\"open\");\n        }\n      });\n    }\n\n    return this;\n  }\n}\n\nclass Well extends div {\n  constructor(o: {\n    size?: Size\n  }) {\n    super();\n\n    super.AddClass(\"well\");\n    if (o.size != undefined) {\n      super.AddClass(\"well-\" + o.size);\n    }\n  }\n}\n\n\nclass AlertMessage extends div {\n  constructor(o: {color?: Color, dismissible?: boolean}) {\n    super();\n    super.AddClass(\"alert\");\n    \n    if (o.dismissible != undefined && o.dismissible) {\n      super.AddClass(\"alert-dismissible\");\n\n      const close = new button();close.Html(\"x\");\n      close.AddAttr({\n        type: \"button\",\n        class: \"close\",\n        \"data-dismiss\": \"alert\"\n      });\n\n      close.AddEventListener(\"click\", () => {\n        super.Delete();\n      });\n\n      super.Add(close);\n    }\n\n    if (o.color != undefined) {\n      super.AddClass(\"alert-\" + o.color);\n    }\n    \n  }\n}\n\nclass TextField extends input {\n  constructor(o: {\n    size?: Size,\n    type?: InputType,\n    placeholder?: string\n  }) {\n\n    super();\n\n    super.AddClass(\"form-control\");\n\n    if (o.size != undefined) {\n      super.AddClass(\"input-\" + o.size);\n    }\n\n    if (o.type != undefined) {\n      super.AddAttr({\n        type: o.type\n      });\n    }\n\n    if (o.placeholder != undefined) {\n      super.AddAttr({\n        placeholder: o.placeholder\n      });\n    }\n\n  }\n\n  value(v: string = \"\") {\n    if (v == \"\")\n      return this.GetValue();\n    else \n      this.AddValue(v);\n    return this;\n  }\n\n  enable(v: boolean = true) {\n    if (v) {\n      this.DeleteAttr(\"disabled\");\n    } else {\n      this.AddAttr({\n        disabled: \"\"\n      });\n    }\n  }\n\n}\n\nclass TextFieldAddon extends div{\n  tf: TextField\n  constructor(o: { \n    size?: Size,\n    type?: InputType,\n    placeholder?: string,\n    prefix?: string | Widget,\n    suffix?: string | Widget\n  }) {\n    super();\n    super.AddClass(\"input-group\");\n    this.tf = new TextField(o);\n\n    const prefix = new span();\n    prefix.AddClass(\"input-group-addon\");\n    if (o.prefix != undefined) {\n      if (typeof(o.prefix) == \"string\") {\n        prefix.Html(o.prefix);\n      } else {\n        prefix.Add(o.prefix);\n      }\n      super.Add(prefix);\n    }\n\n    super.Add(this.tf);\n\n    const suffix = new span();\n    suffix.AddClass(\"input-group-btn\");\n    if (o.suffix != undefined) {\n      \n      const btn = new Button({text: o.suffix, color: Color.Default});\n      suffix.Add(btn);\n      super.Add(suffix);\n    }\n  \n\n  }\n\n  value(v: string = \"\") {\n    if (v == \"\")\n      return this.tf.GetValue();\n    else \n      this.tf.AddValue(v);\n    return this;\n  }\n\n  enable(v: boolean = true) {\n    if (v) {\n      this.tf.DeleteAttr(\"disabled\");\n    } else {\n      this.tf.AddAttr({\n        disabled: \"\"\n      });\n    }\n  }\n\n}\n\nclass TextFieldFeedBack extends div {\n  tf: TextField\n  icon: Icon\n  msg: div\n  constructor(o: {\n    size?: Size,\n    type?: InputType,\n    placeholder?: string,\n  }) {\n    super();\n    this.tf = new TextField(o);\n\n    super.AddClass(\"has-feedback\");\n    super.Add(this.tf);\n\n    this.icon = new Icon(Icons.Ok);\n    this.icon.AddClass(\"form-control-feedback\");\n    this.icon.Hide();\n    super.Add(this.icon);\n  }\n\n  check(msg: string, type: Message) {\n\n    super.DeleteClass([\"has-success\", \"has-warning\", \"has-danger\"]);\n    this.icon.Show();\n\n    if (type == Message.Success) {\n      super.AddClass(\"has-success\");\n      this.icon.change(Icons.Ok);\n    } else if (type == Message.Warning) {\n      this.icon.change(Icons.WarningSign);\n      super.AddClass(\"has-warning\");\n    } else {\n      this.icon.change(Icons.Remove);\n      super.AddClass(\"has-error\");\n    }\n  }\n\n  value(v: string = \"\") {\n    if (v == \"\")\n      return this.tf.GetValue();\n    else \n      this.tf.AddValue(v);\n    return this;\n  }\n\n  enable(v: boolean = true) {\n    if (v) {\n      this.tf.DeleteAttr(\"disabled\");\n    } else {\n      this.tf.AddAttr({\n        disabled: \"\"\n      });\n    }\n  }\n}\n\nclass TextBox extends textarea {\n  constructor(o: {\n    placeholder?: string\n  }) {\n\n    super();\n\n    super.AddClass(\"form-control\");\n\n\n    if (o.placeholder != undefined) {\n      super.AddAttr({\n        placeholder: o.placeholder\n      });\n    }\n\n  }\n\n  value(v: string = \"\") {\n    if (v == \"\")\n      return this.GetValue();\n    else \n      this.Html(v);\n    return this;\n  }\n\n  enable(v: boolean = true) {\n    if (v) {\n      this.DeleteAttr(\"disabled\");\n    } else {\n      this.AddAttr({\n        disabled: \"\"\n      });\n    }\n  }\n\n}\n\nclass Radio extends div {\n  tf: input\n  constructor(o: {\n    label?: string | Widget,\n    inline?: boolean,\n    group: string,\n    change?: (v: boolean) => void\n  }) {\n    super();\n    super.AddClass(\"radio\");\n    \n    if (o.inline != undefined && o.inline) {\n      super.AddStyle({display: \"inline\"});\n    }\n\n    this.tf = new input().AddAttr({\n      type: InputType.Radio,\n      name: o.group\n    });\n\n    const lbl = new label();\n    \n    lbl.Add(this.tf);\n\n    super.Add(lbl);\n    \n    if (o.label != undefined) {\n      if (typeof(o.label) == \"string\") {\n        const a = new span();\n        a.Html(o.label);\n        lbl.Add(a);\n      } else {\n        lbl.Add(o.label);\n      }\n    }\n\n    if (o.change != undefined) {\n      this.tf.AddEventListener(\"change\", () => {\n        if (o.change != undefined) {\n          const v = this.tf.GetValue() as boolean;\n          o.change(v);\n        }\n      });\n    }\n\n  }\n\n  value(v: boolean|null = null) {\n    if (v == null) {\n      return this.tf.GetValue();\n    } else {\n      this.tf.AddValue(v);\n    }\n    return false;\n  } \n\n  enable(v: boolean = true) {\n    if (v) {\n      this.tf.DeleteAttr(\"disabled\");\n    } else {\n      this.tf.AddAttr({\n        disabled: \"\"\n      });\n    }\n  }\n}\n\n\nclass CheckBox extends div {\n  tf: input\n  constructor(o: {\n    label?: string | Widget,\n    inline?: boolean,\n    change?: (v: boolean) => void\n  }) {\n    super();\n    super.AddClass(\"checkbox\");\n    \n    if (o.inline != undefined && o.inline) {\n      super.AddStyle({display: \"inline\"});\n    }\n\n    this.tf = new input().AddAttr({\n      type: InputType.Checkbox\n    });\n\n    const lbl = new label();\n    \n    lbl.Add(this.tf);\n\n    super.Add(lbl);\n    \n    if (o.label != undefined) {\n      if (typeof(o.label) == \"string\") {\n        const a = new span();\n        a.Html(o.label);\n        lbl.Add(a);\n      } else {\n        lbl.Add(o.label);\n      }\n    }\n\n    if (o.change != undefined) {\n      this.tf.AddEventListener(\"change\", () => {\n        if (o.change != undefined) {\n          const v = this.tf.GetValue() as boolean;\n          o.change(v);\n        }\n      });\n    }\n\n  }\n\n  value(v: boolean|null = null) {\n    if (v == null) {\n      if (this.tf.control instanceof HTMLInputElement)\n        return this.tf.control.checked;\n      //return this.tf.GetValue();\n    } else {\n      this.tf.AddValue(v);\n    }\n    return false;\n  } \n\n  enable(v: boolean = true) {\n    if (v) {\n      this.tf.DeleteAttr(\"disabled\");\n    } else {\n      this.tf.AddAttr({\n        disabled: \"\"\n      });\n    }\n  }\n}\n\nclass SelectBox extends select {\n  constructor(o: {\n    multiple?: boolean\n  }) {\n    super();\n    super.AddClass(\"form-control\");\n    if (o.multiple != undefined && o.multiple) {\n      super.AddAttr({\n        multiple: \"\"\n      });\n    }\n  }\n\n  clear() {\n\n  }\n\n  add(key: string, value: string) {\n    const o = new option();\n    o.AddAttr({key: key});\n    o.Text(value);\n    super.Add(o);\n  }\n\n  value(v: string = \"\") {\n    if (v == \"\") {\n      return this.GetValue();\n    } else {\n      this.AddValue(v);\n    }\n  }\n\n  enable(v: boolean = true) {\n    if (v) {\n      this.DeleteAttr(\"disabled\");\n    } else {\n      this.AddAttr({\n        disabled: \"\"\n      });\n    }\n  }\n}\n\nclass Row extends div {\n  constructor(obj: (Widget|string|number)[], align?: Flex) {\n    super();\n\n    super.AddStyle({\n      display: \"flex\",\n      \"flex-direction\": \"row\",\n      \"align-items\": \"baseline\"\n    })\n\n    if (align != undefined) {\n      super.AddStyle({\n        \"align-content\": align\n      })\n    }\n\n    for (const item of obj) {\n      if (item instanceof Widget) {\n        super.Add(item);\n      } else if (typeof(item) == \"number\") {\n        super.Add(new div().AddStyle({width: `${item}px`}));\n      } else if (typeof(item) == \"string\") {\n        super.Add(new Text({text: item}));\n      }\n    }\n  }\n}\n\n\nclass Column extends div {\n  constructor(obj: (Widget|string|number)[]) {\n    super();\n\n    super.AddStyle({\n      display: \"block\"\n    })\n\n    for (const item of obj) {\n      if (item instanceof Widget) {\n        super.Add(item);\n      } else if (typeof(item) == \"number\") {\n        super.Add(new div().AddStyle({height: `${item}px`}));\n      }\n    }\n  }\n}\n\nclass Modal extends div {\n  backdrop: div\n  promise: Promise<unknown>\n  resolvefn: (value: unknown) => void\n  content: div\n  constructor(o: {\n    label?: string | Widget,\n    size?: Size,\n    footer?: (Button|ButtonLink|ButtonSplit)[]\n  }) {\n    super();\n    super.AddClass([\"modal\", \"fade\"]);\n    super.AddStyle({\n      display: \"none\"\n    });\n\n    this.promise = new Promise((resolve) => {\n      this.resolvefn = resolve;\n    });\n\n    const modal_dialog = new div();\n    if (o.size != undefined) {\n      modal_dialog.AddClass([\"modal-dialog\", \"modal-\" + o.size]);\n    } else {\n      modal_dialog.AddClass([\"modal-dialog\", \"modal-\" + Size.Lg]);\n    }\n    const modal_content = new div().AddClass(\"modal-content\");\n    modal_dialog.Add(modal_content);\n\n    super.Add(modal_dialog);\n\n    // for header\n    const header = new div().AddClass(\"modal-header\");\n\n    const close = new button();\n    close.AddAttr({\n      type: \"button\",\n      class: \"close\",\n      \"data-dismiss\": \"modal\"\n    });\n    close.Html(\"\u00D7\");\n\n    close.AddEventListener(\"click\", () => {\n      this.hide(null);\n    });\n\n    header.Add(close);\n\n    if (o.label != undefined) {\n      if (typeof(o.label) == \"string\") {\n        const h = new h4();\n        h.AddClass(\"modal-title\");\n        h.Html(o.label);\n        header.Add(h);\n      } else {\n        header.Add(o.label);\n      }\n    }\n    /// end header\n\n    const body = new div().AddClass(\"modal-body\");\n    const footer = new div().AddClass(\"modal-footer\");\n\n    if (o.label != undefined) {\n      modal_content.Add(header);\n    }\n\n    modal_content.Add([body]);\n\n    if (o.footer != undefined) {\n      modal_content.Add(footer);\n    }\n\n    this.backdrop = new div();\n    this.backdrop.AddClass([\"modal-backdrop\", \"fade\", \"in\"]);\n\n    this.content = body;\n\n    if (o.footer != undefined) {\n      footer.Add(o.footer);\n    }\n\n  }\n\n  add(obj: Widget) {\n    this.content.Add(obj);\n  }\n\n  async show() {\n\n    this.body.appendChild(this.control);\n\n    super.AddStyle({\n      display: \"block\"\n    });\n    super.AddClass(\"in\");\n\n    this.body.appendChild(this.backdrop.control);\n  \n    this.backdrop.AddClass([\"modal-backdrop\", \"fade\", \"in\"]);\n\n    this.backdrop.AddEventListener(\"click\", () => {\n      this.hide(null);\n    });\n\n    return this.promise;\n  }\n\n  hide(msg: string|null = null) {\n    this.resolvefn(msg);\n    \n    super.AddStyle({\n      display: \"none\"\n    });\n    super.DeleteClass(\"in\");\n    \n    super.Delete();\n    this.backdrop.Delete();\n  }\n}\n\n\nclass Form extends fieldset {\n  content: div\n  constructor(o: {label: string|Widget}) {\n    super();\n\n    if (typeof(o.label) == \"string\") {\n      super.Add(new legend().Add(new Text(o.label)));\n    } else {\n      super.Add(new legend().Add(o.label));\n    }\n\n    this.content = new div();\n    super.Add(this.content);\n  }\n\n  add(obj: Widget|Widget[]) {\n    this.content.Add(obj);\n    return this;\n  }\n}\n\nclass Table extends div {\n  table: table\n  tbody: tbody\n  constructor(o: {\n    header?: (string|Widget)[],\n    hover?: boolean,\n    size?: Size,\n    border?: boolean\n  }) {\n    super();\n    super.AddClass(\"table-responsive\");\n\n    this.table = new table().AddClass(\"table\");\n    \n    if ( o.size != undefined ) {\n      this.table.AddClass(\"table-\" + o.size);\n    }\n\n    super.Add(this.table);\n    if (o.header != undefined) {\n      //draw the header\n      const tr1 = new tr();\n      for (const item of o.header) {\n        const th1 = new th();\n        \n        if (typeof(item) == \"string\") {\n          th1.Add(new Text(item));\n        } else {\n          th1.Add(item);\n        }\n\n        tr1.Add(th1);\n      }\n      this.table.Add(new thead().Add(tr1));\n    }\n\n    if (o.hover != undefined && o.hover) {\n      this.table.AddClass(\"table-hover\");\n    } \n\n    if (o.border != undefined && o.border) {\n      this.table.AddClass(\"table-bordered\");\n    }\n\n    this.tbody = new tbody();\n\n    this.table.Add(this.tbody);\n\n  }\n  \n  add(o: {\n    item: (string|Widget)[]\n  }): tr {\n    const tr1 = new tr();\n    for (const item of o.item) {\n      const th1 = new td();\n      \n      if (typeof(item) == \"string\") {\n        th1.Add(new Text(item));\n      } else {\n        th1.Add(item);\n      }\n\n      tr1.Add(th1);\n    }\n    this.tbody.Add(tr1);\n\n    return tr1;\n  }\n}\n\n\nexport {\n  Color,\n  Size,\n  Icons,\n  InputType,\n  Message,\n  Flex\n};\n\nexport {\n  Form,\n  SelectBox,\n  AlertMessage,\n  Button,\n  Html,\n  Badge,\n  ProgressBar,\n  Pagination,\n  BreadCrumb,\n  Pager,\n  ListGroup,\n  Card,\n  Tab,\n  Panel,\n  Icon,\n  Divider,\n  ButtonLink,\n  ButtonSplit,\n  Label,\n  Well,\n  Text,\n  TextField,\n  TextBox,\n  TextFieldAddon,\n  TextFieldFeedBack,\n  Radio,\n  CheckBox,\n  Row,\n  Column,\n  Modal,\n  Table\n};", "import { Html, Icon, Icons, Panel, Row, Size, TextField, TextFieldAddon } from \"./bs.3.mts\";\nimport { button, input, Widget } from \"./core.mts\";\nimport \"./lte.3.css\";\n\nclass LTEApp extends Panel {\n  constructor() {\n    super();\n\n    const sideBar = this.sideBar();\n\n    super.Add(sideBar);\n  }\n\n  sideBar(): Widget {\n    const panel = new Panel().AddClass(\"lte-sidebar\");\n    const brand = new Panel().AddClass(\"lte-brand\");\n    const brand_icon = new Panel().AddClass(\"lte-brand-icon\");\n    const brand_title = new Panel();\n    brand_title.Html(`AdminLTE 3`);\n    brand_title.AddClass(\"lte-brand-title\");\n\n    brand.Add(new Row([\n      brand_icon,\n      10,\n      brand_title\n    ]));\n\n    panel.Add(brand);\n\n    const sidebar_content = new Panel().AddClass(\"lte-sidebar-content\");\n    /// working with sidebar_content\n    const user_panel = new Panel().AddClass(\"lte-user-panel\");\n    sidebar_content.Add(user_panel);\n    const user_photo = new Panel().AddClass(\"lte-user-pic\");\n    user_panel.Add(user_photo);\n    const user_name = new Panel().AddClass(\"lte-user-name\");\n    user_name.Add(new Html(\"Marjon M. Cajocon\"));\n    user_panel.Add(user_name);\n    /// end sidebar content\n    // search\n    const search = new TextFieldAddon({\n      placeholder: \"Search\",\n      suffix: new Icon(Icons.Search)\n    });\n    sidebar_content.Add(new Panel().Add(search).AddClass(\"lte-search\"));\n    // end search\n\n    // generation of the menu\n\n    const menu = new button().Add(new Row([new Icon(Icons.Camera), 10, \"Dashboard\"])).AddClass(\"lte-menu-btn\");\n    const arrow = new Panel().Add(new Icon(Icons.TriangleLeft));    \n    arrow.AddStyle({\n      position: \"absolute\",\n      right: \"10px\",\n      top: \"10px\"\n    });\n    menu.Add(arrow);\n\n    sidebar_content.Add(menu);\n\n    // end generation of the menu\n\n    panel.Add(sidebar_content);\n    return panel;\n  }\n}\n\nexport default LTEApp;", "import {col, div, Window} from \"./plugin/core/core.mjs\";\nimport LTEApp from \"./plugin/core/lte.3.mts\";\nimport \"./theme/bootstrap3/css/bootstrap.min.css\";\n//import \"./theme/bootstrap3/css/theme-lumen.css\";\n\nconst MyApp = new Window();\n\nconst lte = new LTEApp();\n\n\nMyApp.Navigate(lte);\n\nMyApp.Run();\n\nexport default MyApp;\n\n\n"],
  "mappings": "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",
  "names": ["Widget", "_Widget", "element", "__publicField", "className", "clist", "item", "styles", "value", "cs", "name", "attrs", "key", "v", "text", "htmlEntities", "match", "html", "widget", "evt", "fn", "div", "Widget", "span", "Widget", "input", "Widget", "button", "_Window", "Widget", "param", "obj", "__publicField", "Window", "Text", "div", "option", "text", "textColor", "textOverflow", "width", "Html", "span", "Button", "button", "o", "Html", "ok", "Panel", "div", "Icon", "span", "icon", "__publicField", "TextField", "input", "o", "v", "TextFieldAddon", "div", "__publicField", "prefix", "span", "suffix", "btn", "Button", "Row", "div", "obj", "align", "item", "Widget", "Text", "LTEApp", "Panel", "sideBar", "panel", "brand", "brand_icon", "brand_title", "Row", "sidebar_content", "user_panel", "user_photo", "user_name", "Html", "search", "TextFieldAddon", "Icon", "menu", "button", "arrow", "lte_3_default", "MyApp", "Window", "lte", "lte_3_default", "main_default"]
}
