{
  "version": 3,
  "sources": ["../plugin/core/core.mts", "../plugin/core/bs.3.mts", "../plugin/core/lte.3.mts", "../main.mts"],
  "sourcesContent": ["type WidgetElement = HTMLElement | HTMLInputElement | HTMLSelectElement | HTMLCanvasElement;\r\ntype CEvent = [string, EventListenerOrEventListenerObject];\r\n\r\nclass Widget {\r\n  obj: string;\r\n  control: WidgetElement;\r\n  body: HTMLElement\r\n  widgets: Widget[]\r\n  events_list: CEvent[]\r\n\r\n  public constructor(element: string) {\r\n    this.obj = element;\r\n    this.control = document.createElement(element);\r\n    this.body = document.body;\r\n    this.widgets = [];\r\n    this.events_list = [];\r\n  }\r\n\r\n  public HasClass(className: string): boolean {\r\n    const clist = this.control.classList;\r\n    for (const item of clist) {\r\n      if (item == className) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  public Clear(): void {\r\n    // this only clear the next \r\n    // this function use for deep clear the items\r\n    for (const item of this.widgets) {\r\n      item.Delete();\r\n    }\r\n    this.widgets.length = 0;\r\n  }\r\n\r\n  public Dispose(): void {\r\n\r\n  }\r\n\r\n\r\n  public Delete(): void {\r\n    this.Clear(); // clear first the leaves\r\n    this.RemoveEvents(); // remove the current events\r\n    this.Dispose(); // diposal \r\n    this.control.remove(); // this is the final\r\n  }\r\n\r\n\r\n  public AddStyle(styles: { [index: string]: string } | string, value = ''): Widget {\r\n    if (typeof (styles) == 'object') {\r\n\r\n      for (const item in styles) {\r\n        //this.control.style[item] = styles[item];\r\n        this.control.style.setProperty(item, styles[item]);\r\n      }\r\n    } else if (typeof (styles) == 'string') {\r\n      this.control.style.setProperty(styles, value);\r\n    }\r\n    return this;\r\n  }\r\n  \r\n  public AddClass(cs: string | string[]): Widget {\r\n    if (typeof (cs) == 'string') {\r\n      this.control.classList.add(cs);\r\n    } else if (cs instanceof Array) {\r\n      for (const item of cs) {\r\n        if (typeof (item) == 'string') {\r\n          this.control.classList.add(item);\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  public DeleteClass(cs: string | string[]): Widget {\r\n    if (typeof (cs) == 'string') {\r\n      this.control.classList.remove(cs);\r\n    } else if (cs instanceof Array) {\r\n      for (const item of cs) {\r\n        if (typeof (item) == 'string') {\r\n          this.control.classList.remove(item);\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n\r\n  public DeleteAttr(name: string | string[]) {\r\n    if (typeof (name) == \"string\") {\r\n      this.control.removeAttribute(name);\r\n    } else if (name instanceof Array) {\r\n      for (const item of name) {\r\n        this.control.removeAttribute(item);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public AddAttr(attrs: { [index: string]: string }, value: string = ''): Widget {\r\n    if (typeof (attrs) == 'object') {\r\n      for (const item in attrs) {\r\n        this.control.setAttribute(item, attrs[item]);\r\n      }\r\n    } else if (typeof (attrs) == 'string') {\r\n      this.control.setAttribute(attrs, value);\r\n    }\r\n    return this;\r\n  }\r\n  public GetAttr(key: string): string | null {\r\n    return this.control.getAttribute(key);\r\n  }\r\n  public AddValue(v: string|boolean): Widget {\r\n    if (this.control instanceof HTMLInputElement || this.control instanceof HTMLSelectElement) {\r\n      if (typeof(v) == 'string') {\r\n        this.control.value = v;\r\n      } else if (this.control.type == 'radio' || this.control.type == 'checkbox'){\r\n        this.control.checked = v;\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  public GetValue(): string|boolean {\r\n    //return this.control.value;\r\n    if (this.control instanceof HTMLInputElement || this.control instanceof HTMLSelectElement) {\r\n      if (typeof(this.control.value) == 'string') {\r\n        return this.control.value;\r\n      } else if (this.control.type == 'radio' || this.control.type == 'checkbox'){\r\n        return this.control.checked;\r\n      }\r\n    } else if (this.control instanceof HTMLTextAreaElement) {\r\n      return this.control.value;\r\n    }\r\n    return false;\r\n  }\r\n  protected __Escape(text: string): string {\r\n    \r\n    const htmlEntities: Record<string, string> = {\r\n      \"&\": \"&amp;\",\r\n      \"<\": \"&lt;\",\r\n      \">\": \"&gt;\",\r\n      '\"': \"&quot;\",\r\n      \"'\": \"&#039;\"\r\n    };\r\n\r\n    return text.replace(/[&<>\"']/g, function (match) {\r\n      return htmlEntities[match];\r\n    });\r\n    \r\n  }\r\n \r\n  public Html(html: string | null = null): string | Widget {\r\n    if (html != null) {\r\n\r\n      this.control.innerHTML = html;\r\n\r\n      return this;\r\n    }\r\n    return this.control.innerHTML;;\r\n  }\r\n  public Text(text: string | null = null): string | Widget {\r\n    if (text != null) {\r\n      this.control.innerHTML = this.__Escape(text);\r\n      return this;\r\n    }\r\n    return this.control.innerText;\r\n  }\r\n  public Show(): Widget {\r\n    this.control.style.display = '';\r\n    \r\n    return this;\r\n  }\r\n  public Hide(): Widget {\r\n    this.control.style.display = 'none';\r\n    return this;\r\n  }\r\n  \r\n  public Add(widget: Widget | Widget[]): Widget {\r\n    if (widget instanceof Widget) {\r\n      this.widgets.push(widget);\r\n      this.control.appendChild(widget.control);\r\n    } else if (widget instanceof Array) {\r\n      for (const item of widget) {\r\n        if (item instanceof Widget) {\r\n          this.widgets.push(item);\r\n          this.control.appendChild(item.control);\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public Prepend(widget: Widget | Widget[]): Widget {\r\n    if (widget instanceof Widget) {\r\n      this.widgets.push(widget);\r\n      this.control.prepend(widget.control);\r\n    } else if (widget instanceof Array) {\r\n      for (const item of widget) {\r\n        if (item instanceof Widget) {\r\n          this.widgets.push(item);\r\n          this.control.prepend(item.control);\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public AddEventListener(evt: string, fn: EventListenerOrEventListenerObject): Widget {\r\n    this.control.addEventListener(evt, fn);\r\n\r\n    //this.events_list.push(Ceven [evt, fn]);\r\n    this.events_list.push([evt, fn])\r\n    return this;\r\n  }\r\n\r\n  private RemoveEvents(): Widget {\r\n    for (const item of this.events_list) {\r\n      console.log(`Clean up: ${item[0]} - ${item[1]}`);\r\n      this.control.removeEventListener(item[0], item[1]);\r\n    }\r\n    //this.events_list = [];\r\n    this.events_list.length = 0;\r\n    return this;\r\n  }\r\n\r\n}\r\nclass html extends Widget { constructor() { super(\"html\"); } }\r\nclass head extends Widget { constructor() { super(\"head\"); } }\r\nclass body extends Widget { constructor() { super(\"body\"); } }\r\nclass title extends Widget { constructor() { super(\"title\"); } }\r\nclass base extends Widget { constructor() { super(\"base\"); } }\r\nclass link extends Widget { constructor() { super(\"link\"); } }\r\nclass meta extends Widget { constructor() { super(\"meta\"); } }\r\nclass style extends Widget { constructor() { super(\"style\"); } }\r\nclass script extends Widget { constructor() { super(\"script\"); } }\r\nclass noscript extends Widget { constructor() { super(\"noscript\"); } }\r\nclass template extends Widget { constructor() { super(\"template\"); } }\r\nclass section extends Widget { constructor() { super(\"section\"); } }\r\nclass nav extends Widget { constructor() { super(\"nav\"); } }\r\nclass article extends Widget { constructor() { super(\"article\"); } }\r\nclass aside extends Widget { constructor() { super(\"aside\"); } }\r\nclass h1 extends Widget { constructor() { super(\"h1\"); } }\r\nclass h2 extends Widget { constructor() { super(\"h2\"); } }\r\nclass h3 extends Widget { constructor() { super(\"h3\"); } }\r\nclass h4 extends Widget { constructor() { super(\"h4\"); } }\r\nclass h5 extends Widget { constructor() { super(\"h5\"); } }\r\nclass h6 extends Widget { constructor() { super(\"h6\"); } }\r\nclass header extends Widget { constructor() { super(\"header\"); } }\r\nclass footer extends Widget { constructor() { super(\"footer\"); } }\r\nclass address extends Widget { constructor() { super(\"address\"); } }\r\nclass p extends Widget { constructor() { super(\"p\"); } }\r\nclass hr extends Widget { constructor() { super(\"hr\"); } }\r\nclass pre extends Widget { constructor() { super(\"pre\"); } }\r\nclass blockquote extends Widget { constructor() { super(\"blockquote\"); } }\r\nclass ol extends Widget { constructor() { super(\"ol\"); } }\r\nclass ul extends Widget { constructor() { super(\"ul\"); } }\r\nclass li extends Widget { constructor() { super(\"li\"); } }\r\nclass dl extends Widget { constructor() { super(\"dl\"); } }\r\nclass dt extends Widget { constructor() { super(\"dt\"); } }\r\nclass dd extends Widget { constructor() { super(\"dd\"); } }\r\nclass figure extends Widget { constructor() { super(\"figure\"); } }\r\nclass figcaption extends Widget { constructor() { super(\"figcaption\"); } }\r\nclass main extends Widget { constructor() { super(\"main\"); } }\r\nclass div extends Widget { constructor() { super(\"div\"); } }\r\nclass a extends Widget { constructor() { super(\"a\"); } }\r\nclass em extends Widget { constructor() { super(\"em\"); } }\r\nclass strong extends Widget { constructor() { super(\"strong\"); } }\r\nclass small extends Widget { constructor() { super(\"small\"); } }\r\nclass s extends Widget { constructor() { super(\"s\"); } }\r\nclass cite extends Widget { constructor() { super(\"cite\"); } }\r\nclass q extends Widget { constructor() { super(\"q\"); } }\r\nclass dfn extends Widget { constructor() { super(\"dfn\"); } }\r\nclass abbr extends Widget { constructor() { super(\"abbr\"); } }\r\nclass ruby extends Widget { constructor() { super(\"ruby\"); } }\r\nclass rt extends Widget { constructor() { super(\"rt\"); } }\r\nclass rp extends Widget { constructor() { super(\"rp\"); } }\r\nclass b extends Widget { constructor() { super(\"b\"); } }\r\nclass i extends Widget { constructor() { super(\"i\"); } }\r\nclass u extends Widget { constructor() { super(\"u\"); } }\r\nclass mark extends Widget { constructor() { super(\"mark\"); } }\r\nclass bdi extends Widget { constructor() { super(\"bdi\"); } }\r\nclass bdo extends Widget { constructor() { super(\"bdo\"); } }\r\nclass span extends Widget { constructor() { super(\"span\"); } }\r\nclass br extends Widget { constructor() { super(\"br\"); } }\r\nclass wbr extends Widget { constructor() { super(\"wbr\"); } }\r\nclass ins extends Widget { constructor() { super(\"ins\"); } }\r\nclass del extends Widget { constructor() { super(\"del\"); } }\r\nclass img extends Widget { constructor() { super(\"img\"); } }\r\nclass iframe extends Widget { constructor() { super(\"iframe\"); } }\r\nclass embed extends Widget { constructor() { super(\"embed\"); } }\r\nclass param extends Widget { constructor() { super(\"param\"); } }\r\nclass video extends Widget { constructor() { super(\"video\"); } }\r\nclass audio extends Widget { constructor() { super(\"audio\"); } }\r\nclass source extends Widget { constructor() { super(\"source\"); } }\r\nclass track extends Widget { constructor() { super(\"track\"); } }\r\nclass canvas extends Widget { constructor() { super(\"canvas\"); } }\r\nclass map extends Widget { constructor() { super(\"map\"); } }\r\nclass area extends Widget { constructor() { super(\"area\"); } }\r\nclass svg extends Widget { constructor() { super(\"svg\"); } }\r\nclass math extends Widget { constructor() { super(\"math\"); } }\r\nclass table extends Widget { constructor() { super(\"table\"); } }\r\nclass caption extends Widget { constructor() { super(\"caption\"); } }\r\nclass colgroup extends Widget { constructor() { super(\"colgroup\"); } }\r\nclass col extends Widget { constructor() { super(\"col\"); } }\r\nclass tbody extends Widget { constructor() { super(\"tbody\"); } }\r\nclass thead extends Widget { constructor() { super(\"thead\"); } }\r\nclass tfoot extends Widget { constructor() { super(\"tfoot\"); } }\r\nclass tr extends Widget { constructor() { super(\"tr\"); } }\r\nclass td extends Widget { constructor() { super(\"td\"); } }\r\nclass th extends Widget { constructor() { super(\"th\"); } }\r\nclass form extends Widget { constructor() { super(\"form\"); } }\r\nclass label extends Widget { constructor() { super(\"label\"); } }\r\nclass input extends Widget { constructor() { super(\"input\"); } }\r\nclass button extends Widget { constructor() { super(\"button\"); } }\r\nclass select extends Widget { constructor() { super(\"select\"); } }\r\nclass datalist extends Widget { constructor() { super(\"datalist\"); } }\r\nclass optgroup extends Widget { constructor() { super(\"optgroup\"); } }\r\nclass option extends Widget { constructor() { super(\"option\"); } }\r\nclass textarea extends Widget { constructor() { super(\"textarea\"); } }\r\nclass fieldset extends Widget { constructor() { super(\"fieldset\"); } }\r\nclass legend extends Widget { constructor() { super(\"legend\"); } }\r\nclass progress extends Widget { constructor() { super(\"progress\"); } }\r\nclass meter extends Widget { constructor() { super(\"meter\"); } }\r\nclass output extends Widget { constructor() { super(\"output\"); } }\r\nclass details extends Widget { constructor() { super(\"details\"); } }\r\nclass summary extends Widget { constructor() { super(\"summary\"); } }\r\nclass dialog extends Widget { constructor() { super(\"dialog\"); } }\r\nclass center extends Widget { constructor() { super(\"center\"); } }\r\n\r\n\r\n\r\nclass Window extends Widget {\r\n  static obj: Window\r\n  constructor(param: {\r\n    app: string | null,\r\n    title: string | null,\r\n    width: string | null,\r\n    height: string | null\r\n  } | null = null) {\r\n    super('div');\r\n    if (typeof(Window.obj) == 'undefined') {\r\n      this.AddStyle({\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative'\r\n      });\r\n      if (typeof (param) == 'object') {\r\n        //const { app = null, title = '', width = null, height = null } = param;\r\n      }\r\n      this.Hide();\r\n      this.body.appendChild(this.control);\r\n      Window.obj = this;\r\n    }\r\n  }\r\n  public Navigate(obj: Widget | Widget[]) {\r\n    Window.obj.Clear();\r\n    Window.obj.Add(obj);\r\n    return this;\r\n  }\r\n  public Run() {\r\n    Window.obj.Show();\r\n    return this;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass FileManager {\r\n\r\n  public s2ab(s: string): ArrayBuffer {\r\n    var buf = new ArrayBuffer(s.length);\r\n    var view = new Uint8Array(buf);\r\n    for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\r\n    return buf;\r\n  }\r\n\r\n  public getBlob(app: { base64: string | null, type: string | null }) {\r\n\r\n    const mtype: string = app.type || \"application/json\";\r\n    if (app.base64 != null) {\r\n      const blob = new Blob([this.s2ab(atob(app.base64))], {\r\n        type: mtype\r\n      });\r\n\r\n      return blob;\r\n    }\r\n  }\r\n}\r\n\r\nclass Http {\r\n  xml: XMLHttpRequest;\r\n  body: string | FormData | null;\r\n\r\n  constructor(param: { method: string, url: string, body: string | null | FormData | { [index: string]: string }, header: { [index: string]: string } }) {\r\n    let { method = 'GET', url = '', body = null, header = {} } = param;\r\n    this.body = null;\r\n    this.xml = new XMLHttpRequest();\r\n    this.xml.open(method, url, true);\r\n    if (typeof (header) == 'object') {\r\n      if (body instanceof FormData) {\r\n        // this is a file\r\n        //header[\"Content-Type\"] = \"multipart/form-data\";\r\n        delete header[\"Content-Type\"];\r\n      }\r\n      else if (typeof (body) === \"object\") {\r\n        header[\"Content-Type\"] = \"application/json\";\r\n        body = JSON.stringify(body);\r\n      }\r\n      for (const key in header) {\r\n        this.xml.setRequestHeader(key, header[key]);\r\n      }\r\n    }\r\n    if (typeof (body) == 'string') {\r\n      this.body = body;\r\n    }\r\n  }\r\n  public async Load<T>(): Promise<T> {\r\n    this.xml.send(this.body);\r\n    const promise = new Promise<T>((resolve, reject) => {\r\n      this.xml.addEventListener('load', function () {\r\n        resolve(this.response);\r\n      });\r\n      this.xml.addEventListener('error', function () {\r\n        resolve((null as T));\r\n      });\r\n    });\r\n    return await promise;\r\n  }\r\n\r\n  public Then(fn: (response: any) => void): void {\r\n    this.xml.addEventListener('load', (e) => {\r\n      fn(this.xml.response);\r\n    });\r\n  }\r\n\r\n  public Progress(fn: Function): void {\r\n    if (typeof (fn) == 'function') {\r\n      this.xml.addEventListener('progress', (e) => {\r\n        fn(e);\r\n      });\r\n    }\r\n  }\r\n  public UploadProgress(fn: Function): void {\r\n    if (typeof (fn) == 'function') {\r\n      this.xml.upload.addEventListener('progress', (e) => {\r\n        fn(e);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n\r\nclass DateCore {\r\n  names: { [index: number]: string }\r\n\r\n  constructor() {\r\n\r\n    this.names = {\r\n      0: \"Sunday\",\r\n      1: \"Monday\",\r\n      2: \"Tuesday\",\r\n      3: \"Wednesday\",\r\n      4: \"Thursday\",\r\n      5: \"Friday\",\r\n      6: \"Saturday\"\r\n    };\r\n\r\n  }\r\n\r\n  public DateCheck(frm: string, t: string): [boolean, number, string[]] {\r\n    var from_d = frm;\r\n    var to_d = t;\r\n\r\n    const b: [boolean, number, string[]] = [false, 0, []];\r\n\r\n    if (from_d == '' || to_d == '') {\r\n      return b;\r\n    }\r\n\r\n    b[0] = true;\r\n\r\n    var f = new Date(from_d);\r\n    var e = new Date(to_d);\r\n    var i = 0;\r\n    while (f <= e) {\r\n      var m = (f.getMonth() + 1) < 10 ? '0' + (f.getMonth() + 1) : (f.getMonth() + 1);\r\n      var day = f.getDate() < 10 ? '0' + f.getDate() : f.getDate();\r\n\r\n      var d = f.getFullYear().toString() + \"-\" + m + \"-\" + day;\r\n      b[2].push(d);\r\n      var ndate = f.setDate(f.getDate() + 1);\r\n      f = new Date(ndate);\r\n      i++;\r\n    }\r\n    b[1] = i;\r\n\r\n    return b;\r\n  }\r\n\r\n  GetDay(date_str: string) {\r\n    return this.names[new Date(date_str).getDay()];\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n//   class IDB {\r\n//     constructor(db = null, tbl = null, version = 1) {\r\n\r\n//       const dbName = db == null ? \"db\" : db;\r\n//       const table = tbl == null ? \"table\": tbl;\r\n//       const dbVersion = version; // Versioning is required for schema updates.\r\n\r\n//       const request = indexedDB.open(dbName, dbVersion);\r\n\r\n//       request.onupgradeneeded = function (event) {\r\n//         const db = event.target.result;\r\n//         // Create an object store named 'users' with 'id' as the keyPath\r\n//         if (!db.objectStoreNames.contains(table)) {\r\n//           db.createObjectStore(table, { keyPath: \"id\" });\r\n//         }\r\n//       };\r\n\r\n//       request.onsuccess = function (event) {\r\n//         const db = event.target.result;\r\n//       };\r\n\r\n//       request.onerror = function (event) {\r\n//         console.error(\"Error opening database:\", event.target.errorCode);\r\n//       };\r\n\r\n//       this.dbname = dbName;\r\n//       this.version = dbVersion;\r\n//       this.table = table;\r\n//     }\r\n\r\n//     async add(data_obj) {\r\n//       const request = indexedDB.open(this.dbname, this.version);\r\n\r\n//       const promise = new Promise((resolve, reject) => {\r\n//         request.onsuccess = (event) => { // Use an arrow function here\r\n//           const db = event.target.result;\r\n//           const transaction = db.transaction(this.table, \"readwrite\");\r\n//           const objectStore = transaction.objectStore(this.table);\r\n\r\n//           const request = objectStore.add(data_obj);\r\n\r\n//           request.onsuccess = () => { // Use an arrow function here\r\n//             // Fixed to use data_obj instead of user\r\n//             resolve(true);\r\n//           };\r\n\r\n//           request.onerror = (event) => { // Use an arrow function here\r\n//             resolve(null);\r\n//           };\r\n//         };\r\n//       });\r\n//       return promise;\r\n//     }\r\n\r\n//     async update(id, data_obj) {\r\n//       const request = indexedDB.open(this.dbname, this.version);\r\n//       const promise = new Promise((resolve, reject) => {\r\n//         request.onsuccess = (event) => {\r\n//           const db = event.target.result;\r\n//           const transaction = db.transaction(this.table, \"readwrite\");\r\n//           const objectStore = transaction.objectStore(this.table);\r\n\r\n//           const getrequest = objectStore.get(id);\r\n\r\n//           getrequest.onsuccess = (event) => {\r\n//             const old_data = event.target.result;\r\n//             const updateRequest = objectStore.put({ ...old_data, ...data_obj });\r\n\r\n//             updateRequest.onsuccess = () => {\r\n//               resolve(true);\r\n//             };\r\n\r\n//             updateRequest.onerror = (event) => {\r\n//               resolve(null);\r\n//             };\r\n//           };\r\n\r\n//           getrequest.onerror = (event) => {\r\n//             resolve(null);\r\n//           };\r\n//         };\r\n\r\n//         request.onerror = (event) => {\r\n//           resolve(null);\r\n//         };\r\n//       });\r\n//       return promise;\r\n//     }\r\n\r\n//     async get(id) {\r\n//       const request = indexedDB.open(this.dbname, this.version);\r\n\r\n//       const promise = new Promise((resolve, reject) => {\r\n\r\n//         request.onsuccess = (event) => {\r\n//           const db = event.target.result;\r\n//           const transaction = db.transaction(this.table, \"readonly\");\r\n//           const objectStore = transaction.objectStore(this.table);\r\n\r\n//           const getrequest = objectStore.get(id);\r\n\r\n//           getrequest.onsuccess = (event) => {\r\n//             const data = event.target.result;\r\n//             resolve(data);\r\n//           };\r\n\r\n//           getrequest.onerror = (event) => {\r\n//             resolve(null);\r\n//           };\r\n//         };\r\n\r\n//         request.onerror = (event) => {\r\n//           resolve(null);\r\n//         };\r\n//       });\r\n\r\n//       return promise;\r\n//     }\r\n\r\n//     async getAll() {\r\n//       const request = indexedDB.open(this.dbname, this.version);\r\n\r\n//       const promise = new Promise((resolve, reject) => {\r\n\r\n//         request.onsuccess = (event) => {\r\n//           const db = event.target.result;\r\n//           const transaction = db.transaction(this.table, \"readonly\");\r\n//           const objectStore = transaction.objectStore(this.table);\r\n\r\n//           const getAllRequest = objectStore.getAll();\r\n\r\n//           getAllRequest.onsuccess = (event) => {\r\n//             const data = event.target.result;\r\n//             resolve(data);\r\n//           };\r\n\r\n//           getAllRequest.onerror = (event) => {\r\n//             resolve(null);\r\n//           };\r\n//         };\r\n\r\n//         request.onerror = (event) => {\r\n//           resolve(null);\r\n//         };\r\n\r\n//       });\r\n\r\n//       return promise;\r\n\r\n//     }\r\n\r\n//     async delete(id) {\r\n//       const request = indexedDB.open(this.dbname, this.version);\r\n//       const promise = new Promise((resolve, reject) => {\r\n//         request.onsuccess = (event) => {\r\n//             const db = event.target.result;\r\n//             const transaction = db.transaction(this.table, \"readwrite\");\r\n//             const objectStore = transaction.objectStore(this.table);\r\n\r\n//             const deleteRequest = objectStore.delete(id);\r\n\r\n//             deleteRequest.onsuccess = () => {\r\n//                 resolve(true);\r\n//             };\r\n\r\n//             deleteRequest.onerror = (event) => {\r\n//                 resolve(null);\r\n//             };\r\n//         };\r\n\r\n//         request.onerror = (event) => {\r\n//             resolve(null);\r\n//         };\r\n//       });\r\n//     return promise;\r\n//   }\r\n\r\n//   async deleteAll() {\r\n//     const request = indexedDB.open(this.dbname, this.version);\r\n\r\n//     const promise = new Promise((resolve, reject) => {\r\n\r\n//       request.onsuccess = (event) => {\r\n//           const db = event.target.result;\r\n//           const transaction = db.transaction(this.table, \"readwrite\");\r\n//           const objectStore = transaction.objectStore(this.table);\r\n\r\n//           const clearRequest = objectStore.clear();\r\n\r\n//           clearRequest.onsuccess = () => {\r\n//               resolve(true);\r\n//           };\r\n\r\n//           clearRequest.onerror = (event) => {\r\n//             resolve(null);\r\n//           };\r\n//       };\r\n\r\n//       request.onerror = (event) => {\r\n//           resolve(null);\r\n//       };\r\n//     });\r\n//     return promise;\r\n//   }\r\n\r\n\r\n// }\r\n\r\n\r\nexport { DateCore }\r\nexport { Widget };\r\nexport {\r\n  html, head, body, title, base, link, meta, style, script, noscript, template,\r\n  section, nav, article, aside, h1, h2, h3, h4, h5, h6, header, footer, address,\r\n  p, hr, pre, blockquote, ol, ul, li, dl, dt, dd, figure, figcaption, main, div,\r\n  a, em, strong, small, s, cite, q, dfn, abbr, ruby, rt, rp, b, i, u, mark, bdi,\r\n  bdo, span, br, wbr, ins, del, img, iframe, embed, param, video, audio,\r\n  source, track, canvas, map, area, svg, math, table, caption, colgroup, col,\r\n  tbody, thead, tfoot, tr, td, th, form, label, input, button, select, datalist,\r\n  optgroup, option, textarea, fieldset, legend, progress, meter, output, details,\r\n  summary, dialog, center\r\n};\r\nexport {\r\n  Window,\r\n  Http,\r\n  FileManager\r\n};", "import \"./bootstrap3/css/bootstrap.min.css\";\r\n//import \"./bootstrap3/css/theme-lumen.css\";\r\n\r\nimport { a, button, col, div, fieldset, h4, input, label, legend, li, option, select, span, table, tbody, td, textarea, th, thead, tr, u, ul, Widget } from \"./core.mts\";\r\n\r\nenum Icons {\r\n  Asterisk = 'asterisk',\r\n  Plus = 'plus',\r\n  Minus = 'minus',\r\n  Euro = 'euro',\r\n  Cloud = 'cloud',\r\n  Envelope = 'envelope',\r\n  Pencil = 'pencil',\r\n  Glass = 'glass',\r\n  Music = 'music',\r\n  Search = 'search',\r\n  Heart = 'heart',\r\n  Star = 'star',\r\n  StarEmpty = 'star-empty',\r\n  User = 'user',\r\n  Film = 'film',\r\n  ThLarge = 'th-large',\r\n  Th = 'th',\r\n  ThList = 'th-list',\r\n  Ok = 'ok',\r\n  Remove = 'remove',\r\n  ZoomIn = 'zoom-in',\r\n  ZoomOut = 'zoom-out',\r\n  Off = 'off',\r\n  Signal = 'signal',\r\n  Cog = 'cog',\r\n  Trash = 'trash',\r\n  Home = 'home',\r\n  File = 'file',\r\n  Time = 'time',\r\n  Road = 'road',\r\n  DownloadAlt = 'download-alt',\r\n  Download = 'download',\r\n  Upload = 'upload',\r\n  Inbox = 'inbox',\r\n  PlayCircle = 'play-circle',\r\n  Repeat = 'repeat',\r\n  Refresh = 'refresh',\r\n  ListAlt = 'list-alt',\r\n  Lock = 'lock',\r\n  Flag = 'flag',\r\n  Headphones = 'headphones',\r\n  VolumeOff = 'volume-off',\r\n  VolumeDown = 'volume-down',\r\n  VolumeUp = 'volume-up',\r\n  QRCode = 'qrcode',\r\n  Barcode = 'barcode',\r\n  Tag = 'tag',\r\n  Tags = 'tags',\r\n  Book = 'book',\r\n  Bookmark = 'bookmark',\r\n  Print = 'print',\r\n  Camera = 'camera',\r\n  Font = 'font',\r\n  Bold = 'bold',\r\n  Italic = 'italic',\r\n  TextHeight = 'text-height',\r\n  TextWidth = 'text-width',\r\n  AlignLeft = 'align-left',\r\n  AlignCenter = 'align-center',\r\n  AlignRight = 'align-right',\r\n  AlignJustify = 'align-justify',\r\n  List = 'list',\r\n  IndentLeft = 'indent-left',\r\n  IndentRight = 'indent-right',\r\n  FacetimeVideo = 'facetime-video',\r\n  Picture = 'picture',\r\n  MapMarker = 'map-marker',\r\n  Adjust = 'adjust',\r\n  Tint = 'tint',\r\n  Edit = 'edit',\r\n  Share = 'share',\r\n  Check = 'check',\r\n  Move = 'move',\r\n  StepBackward = 'step-backward',\r\n  FastBackward = 'fast-backward',\r\n  Backward = 'backward',\r\n  Play = 'play',\r\n  Pause = 'pause',\r\n  Stop = 'stop',\r\n  Forward = 'forward',\r\n  FastForward = 'fast-forward',\r\n  StepForward = 'step-forward',\r\n  Eject = 'eject',\r\n  ChevronLeft = 'chevron-left',\r\n  ChevronRight = 'chevron-right',\r\n  PlusSign = 'plus-sign',\r\n  MinusSign = 'minus-sign',\r\n  RemoveSign = 'remove-sign',\r\n  OkSign = 'ok-sign',\r\n  QuestionSign = 'question-sign',\r\n  InfoSign = 'info-sign',\r\n  Screenshot = 'screenshot',\r\n  RemoveCircle = 'remove-circle',\r\n  OkCircle = 'ok-circle',\r\n  BanCircle = 'ban-circle',\r\n  ArrowLeft = 'arrow-left',\r\n  ArrowRight = 'arrow-right',\r\n  ArrowUp = 'arrow-up',\r\n  ArrowDown = 'arrow-down',\r\n  ShareAlt = 'share-alt',\r\n  ResizeFull = 'resize-full',\r\n  ResizeSmall = 'resize-small',\r\n  ExclamationSign = 'exclamation-sign',\r\n  Gift = 'gift',\r\n  Leaf = 'leaf',\r\n  Fire = 'fire',\r\n  EyeOpen = 'eye-open',\r\n  EyeClose = 'eye-close',\r\n  WarningSign = 'warning-sign',\r\n  Plane = 'plane',\r\n  Calendar = 'calendar',\r\n  Random = 'random',\r\n  Comment = 'comment',\r\n  Magnet = 'magnet',\r\n  ChevronUp = 'chevron-up',\r\n  ChevronDown = 'chevron-down',\r\n  Retweet = 'retweet',\r\n  ShoppingCart = 'shopping-cart',\r\n  FolderClose = 'folder-close',\r\n  FolderOpen = 'folder-open',\r\n  ResizeVertical = 'resize-vertical',\r\n  ResizeHorizontal = 'resize-horizontal',\r\n  HDD = 'hdd',\r\n  Bullhorn = 'bullhorn',\r\n  Bell = 'bell',\r\n  Certificate = 'certificate',\r\n  ThumbsUp = 'thumbs-up',\r\n  ThumbsDown = 'thumbs-down',\r\n  HandRight = 'hand-right',\r\n  HandLeft = 'hand-left',\r\n  HandUp = 'hand-up',\r\n  HandDown = 'hand-down',\r\n  CircleArrowRight = 'circle-arrow-right',\r\n  CircleArrowLeft = 'circle-arrow-left',\r\n  CircleArrowUp = 'circle-arrow-up',\r\n  CircleArrowDown = 'circle-arrow-down',\r\n  Globe = 'globe',\r\n  Wrench = 'wrench',\r\n  Tasks = 'tasks',\r\n  Filter = 'filter',\r\n  Briefcase = 'briefcase',\r\n  Fullscreen = 'fullscreen',\r\n  Dashboard = 'dashboard',\r\n  Paperclip = 'paperclip',\r\n  HeartEmpty = 'heart-empty',\r\n  Link = 'link',\r\n  Phone = 'phone',\r\n  Pushpin = 'pushpin',\r\n  USD = 'usd',\r\n  GBP = 'gbp',\r\n  Sort = 'sort',\r\n  SortByAlphabet = 'sort-by-alphabet',\r\n  SortByAlphabetAlt = 'sort-by-alphabet-alt',\r\n  SortByOrder = 'sort-by-order',\r\n  SortByOrderAlt = 'sort-by-order-alt',\r\n  SortByAttributes = 'sort-by-attributes',\r\n  SortByAttributesAlt = 'sort-by-attributes-alt',\r\n  Unchecked = 'unchecked',\r\n  Expand = 'expand',\r\n  CollapseDown = 'collapse-down',\r\n  CollapseUp = 'collapse-up',\r\n  LogIn = 'log-in',\r\n  Flash = 'flash',\r\n  LogOut = 'log-out',\r\n  NewWindow = 'new-window',\r\n  Record = 'record',\r\n  Save = 'save',\r\n  Open = 'open',\r\n  Saved = 'saved',\r\n  Import = 'import',\r\n  Export = 'export',\r\n  Send = 'send',\r\n  FloppyDisk = 'floppy-disk',\r\n  FloppySaved = 'floppy-saved',\r\n  FloppyRemove = 'floppy-remove',\r\n  FloppySave = 'floppy-save',\r\n  FloppyOpen = 'floppy-open',\r\n  CreditCard = 'credit-card',\r\n  Transfer = 'transfer',\r\n  Cutlery = 'cutlery',\r\n  Header = 'header',\r\n  Compressed = 'compressed',\r\n  Earphone = 'earphone',\r\n  PhoneAlt = 'phone-alt',\r\n  Tower = 'tower',\r\n  Stats = 'stats',\r\n  SDVideo = 'sd-video',\r\n  HDVideo = 'hd-video',\r\n  Subtitles = 'subtitles',\r\n  SoundStereo = 'sound-stereo',\r\n  SoundDolby = 'sound-dolby',\r\n  Sound51 = 'sound-5-1',\r\n  Sound61 = 'sound-6-1',\r\n  Sound71 = 'sound-7-1',\r\n  CopyrightMark = 'copyright-mark',\r\n  RegistrationMark = 'registration-mark',\r\n  CloudDownload = 'cloud-download',\r\n  CloudUpload = 'cloud-upload',\r\n  TreeConifer = 'tree-conifer',\r\n  TreeDeciduous = 'tree-deciduous',\r\n  CD = 'cd',\r\n  SaveFile = 'save-file',\r\n  OpenFile = 'open-file',\r\n  LevelUp = 'level-up',\r\n  Copy = 'copy',\r\n  Paste = 'paste',\r\n  Alert = 'alert',\r\n  Equalizer = 'equalizer',\r\n  King = 'king',\r\n  Queen = 'queen',\r\n  Pawn = 'pawn',\r\n  Bishop = 'bishop',\r\n  Knight = 'knight',\r\n  BabyFormula = 'baby-formula',\r\n  Tent = 'tent',\r\n  Blackboard = 'blackboard',\r\n  Bed = 'bed',\r\n  Apple = 'apple',\r\n  Erase = 'erase',\r\n  Hourglass = 'hourglass',\r\n  Lamp = 'lamp',\r\n  Duplicate = 'duplicate',\r\n  PiggyBank = 'piggy-bank',\r\n  Scissors = 'scissors',\r\n  Bitcoin = 'bitcoin',\r\n  Yen = 'yen',\r\n  Ruble = 'ruble',\r\n  Scale = 'scale',\r\n  IceLolly = 'ice-lolly',\r\n  IceLollyTasted = 'ice-lolly-tasted',\r\n  Education = 'education',\r\n  OptionHorizontal = 'option-horizontal',\r\n  OptionVertical = 'option-vertical',\r\n  MenuHamburger = 'menu-hamburger',\r\n  ModalWindow = 'modal-window',\r\n  Oil = 'oil',\r\n  Grain = 'grain',\r\n  Sunglasses = 'sunglasses',\r\n  TextSize = 'text-size',\r\n  TextColor = 'text-color',\r\n  TextBackground = 'text-background',\r\n  ObjectAlignTop = 'object-align-top',\r\n  ObjectAlignBottom = 'object-align-bottom',\r\n  ObjectAlignHorizontal = 'object-align-horizontal',\r\n  ObjectAlignLeft = 'object-align-left',\r\n  ObjectAlignVertical = 'object-align-vertical',\r\n  ObjectAlignRight = 'object-align-right',\r\n  TriangleRight = 'triangle-right',\r\n  TriangleLeft = 'triangle-left',\r\n  TriangleBottom = 'triangle-bottom',\r\n  TriangleTop = 'triangle-top',\r\n  Superscript = 'superscript',\r\n  Subscript = 'subscript',\r\n  MenuLeft = 'menu-left',\r\n  MenuRight = 'menu-right',\r\n  MenuDown = 'menu-down',\r\n  MenuUp = 'menu-up',\r\n}\r\n\r\nenum InputType {\r\n  Text = \"text\",\r\n  Password = \"password\",\r\n  Email = \"email\",\r\n  Number = \"number\",\r\n  URL = \"url\",\r\n  Telephone = \"tel\",\r\n  Search = \"search\",\r\n  Date = \"date\",\r\n  DateTimeLocal = \"datetime-local\",\r\n  Month = \"month\",\r\n  Week = \"week\",\r\n  Time = \"time\",\r\n  Color = \"color\",\r\n  File = \"file\",\r\n  Range = \"range\",\r\n  Checkbox = \"checkbox\",\r\n  Radio = \"radio\",\r\n  Hidden = \"hidden\",\r\n  Submit = \"submit\",\r\n  Reset = \"reset\",\r\n  Button = \"button\",\r\n}\r\n\r\nenum Color {\r\n  Default = 'default',\r\n  Primary = 'primary',\r\n  Secondary = 'secondary',\r\n  Success = 'success',\r\n  Info = 'info',\r\n  Warning = 'warning',\r\n  Danger = 'danger',\r\n  Link = 'link',\r\n  Dark = 'dark',\r\n  Light = 'light',\r\n  Muted = 'Muted',\r\n  White = 'white'\r\n}\r\n\r\nenum Size {\r\n  Lg = \"lg\",\r\n  Sm = \"sm\",\r\n  Xs = \"xs\",\r\n  Md = \"md\"\r\n}\r\n\r\nenum Message {\r\n  Success = \"success\",\r\n  Danger = \"error\",\r\n  Warning = \"warning\"\r\n}\r\n\r\nenum Flex {\r\n  Center = 'center',\r\n  Stretch = 'stretch',\r\n  FlexStart = 'flex-start',\r\n  FlexEnd = 'flex-end',\r\n  SpaceAround = 'space-around',\r\n  SpaceBetween = 'space-between',\r\n  SpaceEvenly = 'space-evenly'\r\n}\r\n\r\nclass Text extends div {\r\n  constructor(option: {text: string, textColor?: Color, textOverflow?: boolean, width?: number } | (string|number)) {\r\n    super();\r\n    if (typeof(option) == 'object') {\r\n      const {text, textColor, textOverflow, width} = option;\r\n      super.Text(text);\r\n\r\n      if (textColor != undefined) {\r\n        super.AddClass(`text-${textColor}`);\r\n      }\r\n\r\n      super.AddStyle({display: 'inline-block'});\r\n\r\n      if (textOverflow != undefined && textOverflow) {\r\n        super.AddStyle({\r\n          whiteSpace: 'nowrap',\r\n          overflow: 'hidden',\r\n          textOverflow: 'ellipsis'\r\n        });\r\n\r\n      }\r\n\r\n      if (width != undefined) {\r\n        super.AddStyle({\r\n          width: `${width}px`\r\n        });\r\n      }\r\n    } else if (typeof(option) == 'string') {\r\n      super.Text(option);\r\n    } else if (typeof(option) == 'number') {\r\n      super.Text(option.toString());\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nclass Html extends span {\r\n  constructor(option: {text: string, textColor?: Color}|string) {\r\n    super();\r\n    if (typeof(option) == 'object') {\r\n      const {text, textColor} = option;\r\n      super.Html(text);\r\n      if (textColor != undefined) {\r\n        super.AddClass(`text-${textColor}`);\r\n      }\r\n    } else if (typeof(option) == 'string') {\r\n      super.Html(option);\r\n    }\r\n  \r\n  }\r\n}\r\n\r\nclass Badge extends span {\r\n  constructor(o: {\r\n    text: string | Widget\r\n  }) {\r\n    super();\r\n    super.AddClass(\"badge\");\r\n    if (o.text != undefined) {\r\n\r\n      if (typeof(o.text) == \"string\") {\r\n        super.Add(new Text({text: o.text}));\r\n      } else {\r\n        super.Add(o.text);\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n\r\nclass Label extends span {\r\n  constructor(o: {\r\n    text: string | Widget,\r\n    color?: Color\r\n  }) {\r\n    super();\r\n    super.AddClass(\"label\");\r\n    if (o.text != undefined) {\r\n\r\n      if (typeof(o.text) == \"string\") {\r\n        super.Add(new Text({text: o.text}));\r\n      } else {\r\n        super.Add(o.text);\r\n      }\r\n    }\r\n\r\n    if (o.color != undefined) {\r\n      super.AddClass(\"label-\" + o.color);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nclass Button extends button {\r\n  constructor(o : {  \r\n    text: Widget | string,\r\n    color?: Color,\r\n    size?: Size,\r\n    block?: boolean\r\n  }) {\r\n    super();\r\n\r\n    if (o.color != undefined) {\r\n      super.AddClass([\"btn\", \"btn-\" + o.color]);\r\n    }\r\n\r\n    if (o.size != undefined) {\r\n      super.AddClass([\"btn-\" + o.size]);\r\n    }\r\n\r\n    if (typeof(o.text) == \"string\") {\r\n      super.Add(new Html({text: o.text}));\r\n    } else {\r\n      super.Add(o.text);\r\n    }\r\n\r\n    if (o.block != undefined && o.block) {\r\n      super.AddClass(\"btn-block\");\r\n    }\r\n\r\n  }\r\n\r\n  enable(ok: boolean) {\r\n    super.DeleteClass([\"active\", \"disabled\"]);\r\n    if (ok) {\r\n      super.AddClass(\"active\");\r\n    } else {\r\n      super.AddClass(\"disabled\");\r\n    }\r\n  }\r\n  \r\n}\r\n\r\nclass ButtonLink extends a {\r\n  constructor(o : {  \r\n    text: Widget | string,\r\n    color?: Color,\r\n    size?: Size,\r\n    block?: boolean\r\n  }) {\r\n    super();\r\n\r\n    if (o.color != undefined) {\r\n      super.AddClass([\"btn\", \"btn-\" + o.color]);\r\n    }\r\n\r\n    if (o.size != undefined) {\r\n      super.AddClass([\"btn-\" + o.size]);\r\n    }\r\n\r\n    if (typeof(o.text) == \"string\") {\r\n      super.Add(new Html({text: o.text}));\r\n    } else {\r\n      super.Add(o.text);\r\n    }\r\n\r\n    if (o.block != undefined && o.block) {\r\n      super.AddClass(\"btn-block\");\r\n    }\r\n\r\n  }\r\n\r\n  enable(ok: boolean) {\r\n    super.DeleteClass([\"active\", \"disabled\"]);\r\n    if (ok) {\r\n      super.AddClass(\"active\");\r\n    } else {\r\n      super.AddClass(\"disabled\");\r\n    }\r\n  }\r\n  \r\n}\r\n\r\nclass ProgressBar extends div {\r\n  bar: div;\r\n  constructor(o: {\r\n    color?: Color,\r\n    striped?: boolean,\r\n    animation?: boolean\r\n  }) {\r\n    super();\r\n\r\n    // <div class=\"progress\">\r\n//   <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"70\"\r\n//   aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width:70%\">\r\n//     <span class=\"sr-only\">70% Complete</span>\r\n//   </div>\r\n// </div>\r\n\r\n    super.AddClass(\"progress\");\r\n\r\n    this.bar = new div().AddClass(\"progress-bar\");\r\n    \r\n    this.bar.AddAttr({\r\n      role: \"progressbar\",\r\n      \"aria-valuenow\": \"0\",\r\n      \"aria-valuemin\": \"0\",\r\n      \"aria-valuemax\": \"100\",\r\n    });\r\n\r\n    this.bar.AddStyle({\r\n      width: \"0%\"\r\n    });;\r\n\r\n    super.Add(this.bar);\r\n\r\n    if (o.color != undefined) {\r\n      this.bar.AddClass(`progress-bar-${o.color}`);\r\n    }\r\n\r\n    if (o.striped != undefined && o.striped) {\r\n      this.bar.AddClass([`progress-bar-striped`]);\r\n    }\r\n    if (o.animation != undefined && o.animation) {\r\n      this.bar.AddClass(\"active\");\r\n    }\r\n  }\r\n\r\n  update(percent: number, showText: boolean = false) {\r\n    this.bar.AddStyle(`${percent}%`);\r\n    this.bar.AddAttr({\r\n      \"aria-valuenow\": `${percent}`,\r\n    });\r\n    this.bar.AddStyle({\r\n      width: `${percent}%`\r\n    });\r\n\r\n    if (showText) {\r\n      this.bar.Clear();\r\n      this.bar.Add(new Text(`${percent}%`));\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass Pagination extends ul {\r\n  list: li[]\r\n  constructor(o: {\r\n    size?: Size\r\n  }) {\r\n    super();\r\n    super.AddClass(\"pagination\");\r\n  \r\n    if (o.size != undefined) {\r\n      super.AddClass(`pagination-${o.size}`);\r\n    }\r\n\r\n    this.list = [];\r\n  }\r\n  add(num: number, fn?: (n: number) => void) {\r\n\r\n    const aa = new a();\r\n    const ll = new li().Add(aa);\r\n\r\n    this.list.push(ll);\r\n\r\n    super.Add(ll);\r\n    aa.AddAttr({href: \"#\"});\r\n    aa.Add(new Text(`${num}`));\r\n\r\n    if ( fn != undefined )\r\n    aa.AddEventListener(\"click\", () => {\r\n\r\n      for (const item of this.list) {\r\n        item.DeleteClass(\"active\");\r\n      }\r\n      \r\n      ll.AddClass(\"active\");\r\n      fn(num);\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  clear() {\r\n    for (const item of this.list) {\r\n      item.Delete();\r\n    }\r\n    this.list = [];\r\n  }\r\n\r\n}\r\n\r\n\r\nclass BreadCrumb extends ul {\r\n  list: li[]\r\n  constructor(o: {\r\n  }) {\r\n    super();\r\n    super.AddClass(\"breadcrumb\");\r\n\r\n    this.list = [];\r\n  }\r\n  add(title: string, fn?: (n: string) => void) {\r\n\r\n    const aa = new a();\r\n    const ll = new li().Add(aa);\r\n\r\n    this.list.push(ll);\r\n\r\n    super.Add(ll);\r\n    aa.AddAttr({href: \"#\"});\r\n    const h = new span()\r\n    h.Html(title);\r\n    aa.Add(h);\r\n\r\n    if ( fn != undefined )\r\n    aa.AddEventListener(\"click\", () => {\r\n\r\n      for (const item of this.list) {\r\n        item.DeleteClass(\"active\");\r\n      }\r\n      \r\n      ll.AddClass(\"active\");\r\n      fn(title);\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  clear() {\r\n    for (const item of this.list) {\r\n      item.Delete();\r\n    }\r\n    this.list = [];\r\n  }\r\n  \r\n}\r\n\r\nclass Pager extends ul {\r\n  constructor(o: {\r\n    prevLabel?: string,\r\n    nextLabel?: string,\r\n    align?: boolean,\r\n    nextClicked: () => void,\r\n    prevClicked: () => void\r\n  }) {\r\n    super();\r\n    super.AddClass(\"pager\");\r\n\r\n    const prev = new li();\r\n    const prev_a = new a().AddAttr({\r\n      href: \"#\"\r\n    });\r\n    prev.Add(prev_a);\r\n    if (o.prevLabel == undefined) {\r\n      prev_a.Html(\"Previous\");\r\n    } else {\r\n      prev_a.Html(o.prevLabel);\r\n    }\r\n\r\n    prev_a.AddEventListener(\"click\", (e) => {\r\n      e.preventDefault();\r\n      o.prevClicked();\r\n    });\r\n\r\n    const next = new li();\r\n    const next_a = new a().AddAttr({\r\n      href: \"#\"\r\n    });\r\n    next.Add(next_a);\r\n    if (o.nextLabel == undefined) {\r\n      next_a.Html(\"Next\");\r\n    } else {\r\n      next_a.Html(o.nextLabel);\r\n    }\r\n\r\n    if (o.align != undefined && o.align) {\r\n      prev.AddClass(\"previous\");\r\n      next.AddClass(\"next\");\r\n    }\r\n\r\n    next_a.AddEventListener(\"click\", (e) => {\r\n      e.preventDefault();\r\n      o.nextClicked();\r\n    });\r\n\r\n    super.Add([prev, next]);\r\n  }\r\n}\r\n\r\nclass ListGroup extends ul {\r\n  constructor(o: {}) {\r\n    super();\r\n    super.AddClass(\"list-group\");\r\n\r\n  }\r\n\r\n  add(a: Widget|string, color?: Color) {\r\n    const ll = new li();\r\n    ll.AddClass(\"list-group-item\");\r\n    \r\n    super.Add(ll);\r\n    if (typeof(a) != \"string\") {\r\n      ll.Add(a);\r\n    } else {\r\n      ll.Add(new Html(a));\r\n    }\r\n\r\n    if (color != undefined) {\r\n      ll.AddClass(`list-group-item-${color}`);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nclass Card extends div {\r\n  constructor(o: {\r\n    header: string | Widget,\r\n    color?: Color,\r\n    body: string | Widget\r\n    footer?: string | Widget,\r\n  }) {\r\n    super();\r\n    super.AddClass(\"panel\");\r\n\r\n    if (o.color != undefined) {\r\n      super.AddClass(\"panel-\" + o.color);\r\n    }\r\n\r\n    const panel_heading = new div().AddClass(\"panel-heading\");\r\n    if (typeof(o.header) == \"string\") {\r\n      panel_heading.Add(new Html(o.header));\r\n    } else {\r\n      panel_heading.Add(o.header);\r\n    }\r\n    super.Add(panel_heading);\r\n\r\n    // body\r\n    const body_panel = new div().AddClass(\"panel-body\");\r\n\r\n    if (typeof(o.body) == \"string\") {\r\n      body_panel.Add(new Html(o.body));\r\n    } else {\r\n      body_panel.Add(o.body);\r\n    }\r\n\r\n    super.Add(body_panel);\r\n\r\n    if (o.footer != undefined) {\r\n      const panel_footer = new div().AddClass(\"panel-footer\");\r\n      if (typeof(o.footer) == \"string\") {\r\n        panel_footer.Add(new Html(o.footer));\r\n      } else {\r\n        panel_footer.Add(o.footer);\r\n      }\r\n    \r\n      super.Add(panel_footer);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass Tab extends ul {\r\n  list: li[]\r\n  content: div\r\n  constructor(o: {}) {\r\n    \r\n    super();\r\n    super.AddClass([\"nav\", \"nav-tabs\"]);\r\n\r\n    this.list = [];\r\n    this.content = new div();\r\n  }\r\n\r\n  add(title: string|Widget, fn?: () => void) {\r\n    const ll = new li().AddStyle({\r\n      cursor: \"pointer\"\r\n    });\r\n    const aa = new a();\r\n    ll.Add(aa);\r\n    if (typeof(title) == \"string\") {\r\n      aa.Add(new Html(title));\r\n    } else {\r\n      aa.Add(title);\r\n    }\r\n\r\n    if (fn != undefined) {\r\n      ll.AddEventListener(\"click\", () => {\r\n        for (const item of this.list) {\r\n          item.DeleteClass(\"active\");\r\n        }\r\n\r\n        ll.AddClass(\"active\");\r\n      });\r\n    }\r\n\r\n    this.list.push(ll);\r\n    \r\n    super.Add(ll);\r\n  }\r\n}\r\n\r\nclass Panel extends div {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nclass Icon extends span {\r\n  prev: string\r\n  constructor(icon: Icons) {\r\n    super();\r\n\r\n    this.prev = \"glyphicon-\" + icon;\r\n    \r\n    super.AddClass([\"glyphicon\", this.prev])\r\n  }\r\n\r\n  change(icon: Icons) {\r\n    super.DeleteClass(this.prev);\r\n    this.prev = \"glyphicon-\" + icon;\r\n    super.AddClass(this.prev);\r\n  }\r\n}\r\n\r\nclass Divider extends div {\r\n  constructor() {\r\n    super();\r\n    super.AddClass(\"divider\");\r\n  }\r\n}\r\n\r\nclass ButtonSplit extends div {\r\n  menu: ul\r\n  constructor(o: {\r\n    color: Color,\r\n    clicked?: () => void,\r\n    enable?: boolean\r\n  }) {\r\n    super();\r\n    super.AddClass(\"btn-group\");\r\n\r\n    const title = new ButtonLink({text: \"sample\", color: o.color});\r\n    if (o.enable != undefined) {\r\n      title.enable(o.enable);\r\n    }\r\n\r\n    const caret = new ButtonLink({\r\n      text: new span().AddClass(\"caret\"),\r\n      color: o.color\r\n    });\r\n\r\n    if (o.enable != undefined) {\r\n      caret.enable(o.enable);\r\n    }\r\n\r\n\r\n    caret.AddClass(\"dropdown-toggle\");\r\n    caret.AddAttr({\r\n      \"data-toggle\": \"dropdown\",\r\n      \"aria-expanded\": \"false\",\r\n      \"href\": \"#\"\r\n    });\r\n\r\n    this.menu = new ul();\r\n    this.menu.AddClass(\"dropdown-menu\");\r\n    this.menu.AddAttr({\r\n      role: \"menu\"\r\n    });\r\n\r\n    super.Add(title);\r\n    super.Add(caret);\r\n    super.Add(this.menu);\r\n\r\n    caret.AddEventListener(\"click\", (e) => {\r\n      e.preventDefault();\r\n      if (!super.HasClass(\"open\")) {\r\n        super.AddClass(\"open\");\r\n      } else {\r\n        super.DeleteClass(\"open\");\r\n      }\r\n    });\r\n\r\n    \r\n    title.AddEventListener(\"click\", () => {\r\n      if (o.clicked != undefined) {\r\n        o.clicked();\r\n      }\r\n    });\r\n    \r\n\r\n  }\r\n\r\n  add(title: string|Divider, fn?:() => void) {\r\n\r\n    const aa = new a().AddAttr({ href: \"#\" });\r\n    \r\n    \r\n    if (typeof(title) == \"string\") {\r\n      this.menu.Add(new li().Add(aa));\r\n      aa.Html(title);\r\n    } else {\r\n      this.menu.Add(new li().AddClass(\"divider\"));\r\n    }\r\n\r\n    if (fn != undefined) {\r\n      aa.AddEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n        fn();\r\n        if (!super.HasClass(\"open\")) {\r\n          super.AddClass(\"open\");\r\n        } else {\r\n          super.DeleteClass(\"open\");\r\n        }\r\n      });\r\n    }\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\nclass Well extends div {\r\n  constructor(o: {\r\n    size?: Size\r\n  }) {\r\n    super();\r\n\r\n    super.AddClass(\"well\");\r\n    if (o.size != undefined) {\r\n      super.AddClass(\"well-\" + o.size);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nclass AlertMessage extends div {\r\n  constructor(o: {color?: Color, dismissible?: boolean}) {\r\n    super();\r\n    super.AddClass(\"alert\");\r\n    \r\n    if (o.dismissible != undefined && o.dismissible) {\r\n      super.AddClass(\"alert-dismissible\");\r\n\r\n      const close = new button();close.Html(\"x\");\r\n      close.AddAttr({\r\n        type: \"button\",\r\n        class: \"close\",\r\n        \"data-dismiss\": \"alert\"\r\n      });\r\n\r\n      close.AddEventListener(\"click\", () => {\r\n        super.Delete();\r\n      });\r\n\r\n      super.Add(close);\r\n    }\r\n\r\n    if (o.color != undefined) {\r\n      super.AddClass(\"alert-\" + o.color);\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nclass TextField extends input {\r\n  constructor(o: {\r\n    size?: Size,\r\n    type?: InputType,\r\n    placeholder?: string\r\n  }) {\r\n\r\n    super();\r\n\r\n    super.AddClass(\"form-control\");\r\n\r\n    if (o.size != undefined) {\r\n      super.AddClass(\"input-\" + o.size);\r\n    }\r\n\r\n    if (o.type != undefined) {\r\n      super.AddAttr({\r\n        type: o.type\r\n      });\r\n    }\r\n\r\n    if (o.placeholder != undefined) {\r\n      super.AddAttr({\r\n        placeholder: o.placeholder\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  value(v: string = \"\") {\r\n    if (v == \"\")\r\n      return this.GetValue();\r\n    else \r\n      this.AddValue(v);\r\n    return this;\r\n  }\r\n\r\n  enable(v: boolean = true) {\r\n    if (v) {\r\n      this.DeleteAttr(\"disabled\");\r\n    } else {\r\n      this.AddAttr({\r\n        disabled: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass TextFieldAddon extends div{\r\n  tf: TextField\r\n  constructor(o: { \r\n    size?: Size,\r\n    type?: InputType,\r\n    placeholder?: string,\r\n    prefix?: string | Widget,\r\n    suffix?: string | Widget\r\n  }) {\r\n    super();\r\n    super.AddClass(\"input-group\");\r\n    this.tf = new TextField(o);\r\n\r\n    const prefix = new span();\r\n    prefix.AddClass(\"input-group-addon\");\r\n    if (o.prefix != undefined) {\r\n      if (typeof(o.prefix) == \"string\") {\r\n        prefix.Html(o.prefix);\r\n      } else {\r\n        prefix.Add(o.prefix);\r\n      }\r\n      super.Add(prefix);\r\n    }\r\n\r\n    super.Add(this.tf);\r\n\r\n    const suffix = new span();\r\n    suffix.AddClass(\"input-group-btn\");\r\n    if (o.suffix != undefined) {\r\n      \r\n      const btn = new Button({text: o.suffix, color: Color.Default});\r\n      suffix.Add(btn);\r\n      super.Add(suffix);\r\n    }\r\n  \r\n\r\n  }\r\n\r\n  value(v: string = \"\") {\r\n    if (v == \"\")\r\n      return this.tf.GetValue();\r\n    else \r\n      this.tf.AddValue(v);\r\n    return this;\r\n  }\r\n\r\n  enable(v: boolean = true) {\r\n    if (v) {\r\n      this.tf.DeleteAttr(\"disabled\");\r\n    } else {\r\n      this.tf.AddAttr({\r\n        disabled: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass TextFieldFeedBack extends div {\r\n  tf: TextField\r\n  icon: Icon\r\n  msg: div\r\n  constructor(o: {\r\n    size?: Size,\r\n    type?: InputType,\r\n    placeholder?: string,\r\n  }) {\r\n    super();\r\n    this.tf = new TextField(o);\r\n\r\n    super.AddClass(\"has-feedback\");\r\n    super.Add(this.tf);\r\n\r\n    this.icon = new Icon(Icons.Ok);\r\n    this.icon.AddClass(\"form-control-feedback\");\r\n    this.icon.Hide();\r\n    super.Add(this.icon);\r\n  }\r\n\r\n  check(msg: string, type: Message) {\r\n\r\n    super.DeleteClass([\"has-success\", \"has-warning\", \"has-danger\"]);\r\n    this.icon.Show();\r\n\r\n    if (type == Message.Success) {\r\n      super.AddClass(\"has-success\");\r\n      this.icon.change(Icons.Ok);\r\n    } else if (type == Message.Warning) {\r\n      this.icon.change(Icons.WarningSign);\r\n      super.AddClass(\"has-warning\");\r\n    } else {\r\n      this.icon.change(Icons.Remove);\r\n      super.AddClass(\"has-error\");\r\n    }\r\n  }\r\n\r\n  value(v: string = \"\") {\r\n    if (v == \"\")\r\n      return this.tf.GetValue();\r\n    else \r\n      this.tf.AddValue(v);\r\n    return this;\r\n  }\r\n\r\n  enable(v: boolean = true) {\r\n    if (v) {\r\n      this.tf.DeleteAttr(\"disabled\");\r\n    } else {\r\n      this.tf.AddAttr({\r\n        disabled: \"\"\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nclass TextBox extends textarea {\r\n  constructor(o: {\r\n    placeholder?: string\r\n  }) {\r\n\r\n    super();\r\n\r\n    super.AddClass(\"form-control\");\r\n\r\n\r\n    if (o.placeholder != undefined) {\r\n      super.AddAttr({\r\n        placeholder: o.placeholder\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  value(v: string = \"\") {\r\n    if (v == \"\")\r\n      return this.GetValue();\r\n    else \r\n      this.Html(v);\r\n    return this;\r\n  }\r\n\r\n  enable(v: boolean = true) {\r\n    if (v) {\r\n      this.DeleteAttr(\"disabled\");\r\n    } else {\r\n      this.AddAttr({\r\n        disabled: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass Radio extends div {\r\n  tf: input\r\n  constructor(o: {\r\n    label?: string | Widget,\r\n    inline?: boolean,\r\n    group: string,\r\n    change?: (v: boolean) => void\r\n  }) {\r\n    super();\r\n    super.AddClass(\"radio\");\r\n    \r\n    if (o.inline != undefined && o.inline) {\r\n      super.AddStyle({display: \"inline\"});\r\n    }\r\n\r\n    this.tf = new input().AddAttr({\r\n      type: InputType.Radio,\r\n      name: o.group\r\n    });\r\n\r\n    const lbl = new label();\r\n    \r\n    lbl.Add(this.tf);\r\n\r\n    super.Add(lbl);\r\n    \r\n    if (o.label != undefined) {\r\n      if (typeof(o.label) == \"string\") {\r\n        const a = new span();\r\n        a.Html(o.label);\r\n        lbl.Add(a);\r\n      } else {\r\n        lbl.Add(o.label);\r\n      }\r\n    }\r\n\r\n    if (o.change != undefined) {\r\n      this.tf.AddEventListener(\"change\", () => {\r\n        if (o.change != undefined) {\r\n          const v = this.tf.GetValue() as boolean;\r\n          o.change(v);\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  value(v: boolean|null = null) {\r\n    if (v == null) {\r\n      return this.tf.GetValue();\r\n    } else {\r\n      this.tf.AddValue(v);\r\n    }\r\n    return false;\r\n  } \r\n\r\n  enable(v: boolean = true) {\r\n    if (v) {\r\n      this.tf.DeleteAttr(\"disabled\");\r\n    } else {\r\n      this.tf.AddAttr({\r\n        disabled: \"\"\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n\r\nclass CheckBox extends div {\r\n  tf: input\r\n  constructor(o: {\r\n    label?: string | Widget,\r\n    inline?: boolean,\r\n    change?: (v: boolean) => void\r\n  }) {\r\n    super();\r\n    super.AddClass(\"checkbox\");\r\n    \r\n    if (o.inline != undefined && o.inline) {\r\n      super.AddStyle({display: \"inline\"});\r\n    }\r\n\r\n    this.tf = new input().AddAttr({\r\n      type: InputType.Checkbox\r\n    });\r\n\r\n    const lbl = new label();\r\n    \r\n    lbl.Add(this.tf);\r\n\r\n    super.Add(lbl);\r\n    \r\n    if (o.label != undefined) {\r\n      if (typeof(o.label) == \"string\") {\r\n        const a = new span();\r\n        a.Html(o.label);\r\n        lbl.Add(a);\r\n      } else {\r\n        lbl.Add(o.label);\r\n      }\r\n    }\r\n\r\n    if (o.change != undefined) {\r\n      this.tf.AddEventListener(\"change\", () => {\r\n        if (o.change != undefined) {\r\n          const v = this.tf.GetValue() as boolean;\r\n          o.change(v);\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  value(v: boolean|null = null) {\r\n    if (v == null) {\r\n      if (this.tf.control instanceof HTMLInputElement)\r\n        return this.tf.control.checked;\r\n      //return this.tf.GetValue();\r\n    } else {\r\n      this.tf.AddValue(v);\r\n    }\r\n    return false;\r\n  } \r\n\r\n  enable(v: boolean = true) {\r\n    if (v) {\r\n      this.tf.DeleteAttr(\"disabled\");\r\n    } else {\r\n      this.tf.AddAttr({\r\n        disabled: \"\"\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nclass SelectBox extends select {\r\n  constructor(o: {\r\n    multiple?: boolean\r\n  }) {\r\n    super();\r\n    super.AddClass(\"form-control\");\r\n    if (o.multiple != undefined && o.multiple) {\r\n      super.AddAttr({\r\n        multiple: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n  clear() {\r\n\r\n  }\r\n\r\n  add(key: string, value: string) {\r\n    const o = new option();\r\n    o.AddAttr({key: key});\r\n    o.Text(value);\r\n    super.Add(o);\r\n  }\r\n\r\n  value(v: string = \"\") {\r\n    if (v == \"\") {\r\n      return this.GetValue();\r\n    } else {\r\n      this.AddValue(v);\r\n    }\r\n  }\r\n\r\n  enable(v: boolean = true) {\r\n    if (v) {\r\n      this.DeleteAttr(\"disabled\");\r\n    } else {\r\n      this.AddAttr({\r\n        disabled: \"\"\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nclass Row extends div {\r\n  constructor(obj: (Widget|string|number)[], align?: Flex) {\r\n    super();\r\n\r\n    super.AddStyle({\r\n      display: \"flex\",\r\n      \"flex-direction\": \"row\",\r\n      \"align-items\": \"baseline\"\r\n    })\r\n\r\n    if (align != undefined) {\r\n      super.AddStyle({\r\n        \"align-content\": align\r\n      })\r\n    }\r\n\r\n    for (const item of obj) {\r\n      if (item instanceof Widget) {\r\n        super.Add(item);\r\n      } else if (typeof(item) == \"number\") {\r\n        super.Add(new div().AddStyle({width: `${item}px`}));\r\n      } else if (typeof(item) == \"string\") {\r\n        super.Add(new Text({text: item}));\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nclass Column extends div {\r\n  constructor(obj: (Widget|string|number)[]) {\r\n    super();\r\n\r\n    super.AddStyle({\r\n      display: \"block\"\r\n    })\r\n\r\n    for (const item of obj) {\r\n      if (item instanceof Widget) {\r\n        super.Add(item);\r\n      } else if (typeof(item) == \"number\") {\r\n        super.Add(new div().AddStyle({height: `${item}px`}));\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass Modal extends div {\r\n  backdrop: div\r\n  promise: Promise<unknown>\r\n  resolvefn: (value: unknown) => void\r\n  content: div\r\n  constructor(o: {\r\n    label?: string | Widget,\r\n    size?: Size,\r\n    footer?: (Button|ButtonLink|ButtonSplit)[]\r\n  }) {\r\n    super();\r\n    super.AddClass([\"modal\", \"fade\"]);\r\n    super.AddStyle({\r\n      display: \"none\"\r\n    });\r\n\r\n    this.promise = new Promise((resolve) => {\r\n      this.resolvefn = resolve;\r\n    });\r\n\r\n    const modal_dialog = new div();\r\n    if (o.size != undefined) {\r\n      modal_dialog.AddClass([\"modal-dialog\", \"modal-\" + o.size]);\r\n    } else {\r\n      modal_dialog.AddClass([\"modal-dialog\", \"modal-\" + Size.Lg]);\r\n    }\r\n    const modal_content = new div().AddClass(\"modal-content\");\r\n    modal_dialog.Add(modal_content);\r\n\r\n    super.Add(modal_dialog);\r\n\r\n    // for header\r\n    const header = new div().AddClass(\"modal-header\");\r\n\r\n    const close = new button();\r\n    close.AddAttr({\r\n      type: \"button\",\r\n      class: \"close\",\r\n      \"data-dismiss\": \"modal\"\r\n    });\r\n    close.Html(\"\u00D7\");\r\n\r\n    close.AddEventListener(\"click\", () => {\r\n      this.hide(null);\r\n    });\r\n\r\n    header.Add(close);\r\n\r\n    if (o.label != undefined) {\r\n      if (typeof(o.label) == \"string\") {\r\n        const h = new h4();\r\n        h.AddClass(\"modal-title\");\r\n        h.Html(o.label);\r\n        header.Add(h);\r\n      } else {\r\n        header.Add(o.label);\r\n      }\r\n    }\r\n    /// end header\r\n\r\n    const body = new div().AddClass(\"modal-body\");\r\n    const footer = new div().AddClass(\"modal-footer\");\r\n\r\n    if (o.label != undefined) {\r\n      modal_content.Add(header);\r\n    }\r\n\r\n    modal_content.Add([body]);\r\n\r\n    if (o.footer != undefined) {\r\n      modal_content.Add(footer);\r\n    }\r\n\r\n    this.backdrop = new div();\r\n    this.backdrop.AddClass([\"modal-backdrop\", \"fade\", \"in\"]);\r\n\r\n    this.content = body;\r\n\r\n    if (o.footer != undefined) {\r\n      footer.Add(o.footer);\r\n    }\r\n\r\n  }\r\n\r\n  add(obj: Widget) {\r\n    this.content.Add(obj);\r\n  }\r\n\r\n  async show() {\r\n\r\n    this.body.appendChild(this.control);\r\n\r\n    super.AddStyle({\r\n      display: \"block\"\r\n    });\r\n    super.AddClass(\"in\");\r\n\r\n    this.body.appendChild(this.backdrop.control);\r\n  \r\n    this.backdrop.AddClass([\"modal-backdrop\", \"fade\", \"in\"]);\r\n\r\n    this.backdrop.AddEventListener(\"click\", () => {\r\n      this.hide(null);\r\n    });\r\n\r\n    return this.promise;\r\n  }\r\n\r\n  hide(msg: string|null = null) {\r\n    this.resolvefn(msg);\r\n    \r\n    super.AddStyle({\r\n      display: \"none\"\r\n    });\r\n    super.DeleteClass(\"in\");\r\n    \r\n    super.Delete();\r\n    this.backdrop.Delete();\r\n  }\r\n}\r\n\r\n\r\nclass Form extends fieldset {\r\n  content: div\r\n  constructor(o: {label: string|Widget}) {\r\n    super();\r\n\r\n    if (typeof(o.label) == \"string\") {\r\n      super.Add(new legend().Add(new Text(o.label)));\r\n    } else {\r\n      super.Add(new legend().Add(o.label));\r\n    }\r\n\r\n    this.content = new div();\r\n    super.Add(this.content);\r\n  }\r\n\r\n  add(obj: Widget|Widget[]) {\r\n    this.content.Add(obj);\r\n    return this;\r\n  }\r\n}\r\n\r\nclass Table extends div {\r\n  table: table\r\n  tbody: tbody\r\n  constructor(o: {\r\n    header?: (string|Widget)[],\r\n    hover?: boolean,\r\n    size?: Size,\r\n    border?: boolean\r\n  }) {\r\n    super();\r\n    super.AddClass(\"table-responsive\");\r\n\r\n    this.table = new table().AddClass(\"table\");\r\n    \r\n    if ( o.size != undefined ) {\r\n      this.table.AddClass(\"table-\" + o.size);\r\n    }\r\n\r\n    super.Add(this.table);\r\n    if (o.header != undefined) {\r\n      //draw the header\r\n      const tr1 = new tr();\r\n      for (const item of o.header) {\r\n        const th1 = new th();\r\n        \r\n        if (typeof(item) == \"string\") {\r\n          th1.Add(new Text(item));\r\n        } else {\r\n          th1.Add(item);\r\n        }\r\n\r\n        tr1.Add(th1);\r\n      }\r\n      this.table.Add(new thead().Add(tr1));\r\n    }\r\n\r\n    if (o.hover != undefined && o.hover) {\r\n      this.table.AddClass(\"table-hover\");\r\n    } \r\n\r\n    if (o.border != undefined && o.border) {\r\n      this.table.AddClass(\"table-bordered\");\r\n    }\r\n\r\n    this.tbody = new tbody();\r\n\r\n    this.table.Add(this.tbody);\r\n\r\n  }\r\n  \r\n  add(o: {\r\n    item: (string|Widget)[]\r\n  }): tr {\r\n    const tr1 = new tr();\r\n    for (const item of o.item) {\r\n      const th1 = new td();\r\n      \r\n      if (typeof(item) == \"string\") {\r\n        th1.Add(new Text(item));\r\n      } else {\r\n        th1.Add(item);\r\n      }\r\n\r\n      tr1.Add(th1);\r\n    }\r\n    this.tbody.Add(tr1);\r\n\r\n    return tr1;\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  Color,\r\n  Size,\r\n  Icons,\r\n  InputType,\r\n  Message,\r\n  Flex\r\n};\r\n\r\nexport {\r\n  Form,\r\n  SelectBox,\r\n  AlertMessage,\r\n  Button,\r\n  Html,\r\n  Badge,\r\n  ProgressBar,\r\n  Pagination,\r\n  BreadCrumb,\r\n  Pager,\r\n  ListGroup,\r\n  Card,\r\n  Tab,\r\n  Panel,\r\n  Icon,\r\n  Divider,\r\n  ButtonLink,\r\n  ButtonSplit,\r\n  Label,\r\n  Well,\r\n  Text,\r\n  TextField,\r\n  TextBox,\r\n  TextFieldAddon,\r\n  TextFieldFeedBack,\r\n  Radio,\r\n  CheckBox,\r\n  Row,\r\n  Column,\r\n  Modal,\r\n  Table\r\n};", "import { Html, Icon, Icons, Panel, Row, Size, TextField, TextFieldAddon } from \"./bs.3.mts\";\r\nimport { button, div, input, title, Widget } from \"./core.mts\";\r\nimport \"./lte.3.css\";\r\n\r\nclass LTESubMenuButton extends div {\r\n  constructor(o: {\r\n    title: string,\r\n    fn?: () => void\r\n  }) {\r\n    super();\r\n    const menu = new button().Add(new Row([new Icon(Icons.Link).AddStyle({\r\n      color: \"rgba(255, 255, 255, 0.3)\"\r\n    }), 10, new Html(o.title).AddClass(\"lte-hidable\")])).AddClass(\"lte-menu-btn\");\r\n\r\n    super.Add(menu);\r\n\r\n    if (o.fn != undefined) {\r\n      menu.AddEventListener(\"click\", () => {\r\n        if (o.fn != undefined)\r\n        o.fn();\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nclass LTEMenuButton extends div {\r\n  constructor(o: {\r\n    icon: Icons,\r\n    title: string,\r\n    submenu?: LTESubMenuButton[],\r\n    fn?: () => void\r\n  }) {\r\n    super();\r\n    const arrow_icon = new Icon(Icons.ChevronLeft);\r\n    const menu = new button().Add(new Row([new Icon(o.icon), 10, new Html(o.title).AddClass(\"lte-hidable\")])).AddClass(\"lte-menu-btn\");\r\n    \r\n    arrow_icon.AddClass(\"lte-hidable\");\r\n\r\n    const arrow = new Panel().Add(arrow_icon);    \r\n    \r\n    arrow.AddStyle({\r\n      position: \"absolute\",\r\n      right: \"10px\",\r\n      top: \"10px\"\r\n    });\r\n    \r\n    if (o.submenu != undefined) {\r\n      menu.Add(arrow);\r\n    }\r\n    \r\n    super.Add(menu);\r\n\r\n    if (o.submenu != undefined) {\r\n      /// here is the logic for the drop \r\n      const panel = new Panel().AddStyle({\r\n        display: \"none\"\r\n      });\r\n      super.Add(panel);\r\n\r\n      for (const menu of o.submenu) {\r\n        panel.Add(menu);\r\n      }\r\n\r\n\r\n      menu.AddEventListener(\"click\", () => {\r\n        if (!panel.HasClass(\"lte-menu-show\")) {\r\n          panel.AddClass(\"lte-menu-show\");\r\n          //arrow_icon.change(Icons.ChevronDown);\r\n          arrow_icon.AddClass(\"lte-rotate-arrow\");\r\n          menu.AddClass(\"lte-light-active\");\r\n        } else {\r\n          panel.DeleteClass(\"lte-menu-show\");\r\n          //arrow_icon.change(Icons.ChevronLeft);\r\n          arrow_icon.DeleteClass(\"lte-rotate-arrow\");\r\n          arrow_icon.AddClass(\"lte-rotate-arrow-original\");\r\n          setTimeout(() => {\r\n            arrow_icon.DeleteClass(\"lte-rotate-arrow-original\");\r\n          }, 500);\r\n          menu.DeleteClass(\"lte-light-active\");\r\n        }\r\n      });\r\n\r\n    } else {\r\n\r\n      if (o.fn != undefined) {\r\n        menu.AddEventListener(\"click\", () => {\r\n          if (o.fn != undefined) o.fn();\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n\r\nclass LTEApp extends Panel {\r\n  constructor(o: {\r\n    title?: string,\r\n    logo?: string,\r\n    userPhoto?: string,\r\n    userName?: string,\r\n    sideMenu: LTEMenuButton[]\r\n  }) {\r\n    super();\r\n\r\n    const sideBar = this.sideBar({\r\n      sideMenu: o.sideMenu,\r\n      title: o.title,\r\n      logo: o.logo,\r\n      userName: o.userName,\r\n      userPhoto: o.userPhoto\r\n    });\r\n    \r\n    const body = this.createBody({\r\n      sidebar: sideBar\r\n    });\r\n\r\n    super.Add([\r\n      sideBar,\r\n      body\r\n    ]);\r\n  }\r\n\r\n  createBody(o: {\r\n    sidebar: Widget\r\n  }): Panel {\r\n    const panel = new Panel().AddClass(\"lte-body\");\r\n\r\n    const topBar = new Panel().AddClass(\"lte-top-bar\");\r\n    panel.Add(topBar);\r\n\r\n    const bar = new button().AddClass(\"lte-bar-btn\");\r\n    bar.Add(new Icon(Icons.MenuHamburger))\r\n    topBar.Add(bar);\r\n\r\n    bar.AddEventListener(\"click\", () => {\r\n\r\n      if (window.innerWidth > 990) {\r\n        // for desktop and tablets\r\n        if (o.sidebar.HasClass(\"lte-desktop-hide-side\")) {\r\n          panel.DeleteClass(\"lte-desktop-body\");\r\n          o.sidebar.DeleteClass(\"lte-desktop-hide-side\");\r\n          const all = document.getElementsByClassName(\"lte-hidable\"); // get all the hidable content\r\n          for (const item of all) {\r\n            item.setAttribute(\"style\", \"display:;\");\r\n          }\r\n        } else {\r\n          o.sidebar.AddClass(\"lte-desktop-hide-side\");\r\n          panel.AddClass(\"lte-desktop-body\");\r\n          const all = document.getElementsByClassName(\"lte-hidable\"); // get all the hidable content\r\n          for (const item of all) {\r\n            item.setAttribute(\"style\", \"display: none;\");\r\n          }\r\n        }\r\n      } else {\r\n        if (o.sidebar.HasClass(\"lte-menu-active\")) {\r\n          o.sidebar.DeleteClass(\"lte-menu-active\");\r\n        } else {\r\n          const backdrop = new Panel().AddStyle({\r\n            background: \"rgba(0,0,0,0.3)\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            position: \"fixed\",\r\n            zIndex: \"999\",\r\n            top: \"0px\",\r\n            left: \"0px\"\r\n          }).AddClass(\"lte-backdrop\");\r\n          this.body.appendChild(backdrop.control);\r\n\r\n          backdrop.AddEventListener(\"click\", () => {\r\n            o.sidebar.DeleteClass(\"lte-menu-active\");\r\n            backdrop.Delete();\r\n          });\r\n\r\n          o.sidebar.AddClass(\"lte-menu-active\");\r\n          \r\n        }\r\n      }\r\n    });\r\n\r\n    return panel;\r\n  }\r\n\r\n  sideBar(o: {\r\n    title?: string,\r\n    logo?: string,\r\n    userName?: string,\r\n    userPhoto?: string,\r\n    sideMenu: LTESubMenuButton[]\r\n  }): Widget {\r\n    const panel = new Panel().AddClass(\"lte-sidebar\");\r\n    const brand = new Panel().AddClass(\"lte-brand\");\r\n    const brand_icon = new Panel().AddClass(\"lte-brand-icon\");\r\n    const brand_title = new Panel();\r\n    brand_title.Html(o.title != undefined ? o.title : `AdminLTE 3`);\r\n    brand_title.AddClass([\"lte-brand-title\", \"lte-hidable\"]);\r\n\r\n    brand.Add(new Row([\r\n      brand_icon,\r\n      10,\r\n      brand_title\r\n    ]));\r\n\r\n    panel.Add(brand);\r\n\r\n    const sidebar_content = new Panel().AddClass(\"lte-sidebar-content\");\r\n    /// working with sidebar_content\r\n    const user_panel = new Panel().AddClass(\"lte-user-panel\");\r\n    sidebar_content.Add(user_panel);\r\n    const user_photo = new Panel().AddClass(\"lte-user-pic\");\r\n    user_panel.Add(user_photo);\r\n    const user_name = new Panel().AddClass([\"lte-user-name\", \"lte-hidable\"]);\r\n    user_name.Add(new Html(o.userName != undefined ? o.userName : \"Name of the user\"));\r\n    user_panel.Add(user_name);\r\n    /// end sidebar content\r\n    // search\r\n    const search = new TextFieldAddon({\r\n      placeholder: \"Search\",\r\n      suffix: new Icon(Icons.Search)\r\n    }).AddClass(\"lte-hidable\");\r\n    sidebar_content.Add(new Panel().Add(search).AddClass(\"lte-search\"));\r\n    // end search\r\n\r\n    // generation of the menu\r\n  \r\n    for (const menu of o.sideMenu) {\r\n      sidebar_content.Add(menu);\r\n    }\r\n\r\n    // end generation of the menu\r\n\r\n    panel.Add(sidebar_content);\r\n    return panel;\r\n  }\r\n}\r\n\r\nexport default LTEApp;\r\n\r\nexport {\r\n  LTEMenuButton,\r\n  LTESubMenuButton\r\n};", "import { Icons, Pagination } from \"./plugin/core/bs.3.mts\";\r\nimport {Window} from \"./plugin/core/core.mjs\";\r\nimport LTEApp, { LTEMenuButton, LTESubMenuButton } from \"./plugin/core/lte.3.mts\";\r\n\r\nconst MyApp = new Window();\r\n\r\nconst lte = new LTEApp({\r\n  title: \"Application Title\",\r\n  userName: \"MARJON CAJOCON\",\r\n  sideMenu: [\r\n    new LTEMenuButton({\r\n      icon: Icons.Dashboard,\r\n      title: \"Dashboard\",\r\n      submenu: [\r\n        new LTESubMenuButton({title: \"View Graph\"}),\r\n        new LTESubMenuButton({title: \"View Likeds page\"}),\r\n      ]\r\n    }),\r\n    new LTEMenuButton({\r\n      icon: Icons.User,\r\n      title: \"Profile\",\r\n      submenu: [\r\n        new LTESubMenuButton({title: \"Edit Profile\"})\r\n      ]\r\n    })\r\n  ]\r\n});\r\n\r\nconst test = new Pagination({});\r\n\r\ntest.add(1, (n) => {\r\n  console.log(n);\r\n});\r\ntest.add(2, (n) => {\r\n  console.log(n);\r\n});\r\n\r\nMyApp.Navigate(lte);\r\n\r\nMyApp.Run();\r\n\r\nexport default MyApp;\r\n\r\n\r\n"],
  "mappings": "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",
  "names": ["Widget", "_Widget", "element", "__publicField", "className", "clist", "item", "styles", "value", "cs", "name", "attrs", "key", "v", "text", "htmlEntities", "match", "html", "widget", "evt", "fn", "ul", "Widget", "li", "div", "Widget", "a", "span", "Widget", "input", "Widget", "button", "_Window", "Widget", "param", "obj", "__publicField", "Window", "Text", "div", "option", "text", "textColor", "textOverflow", "width", "Html", "span", "Button", "button", "o", "Html", "ok", "Pagination", "ul", "o", "__publicField", "num", "fn", "aa", "a", "ll", "li", "Text", "item", "Panel", "div", "Icon", "span", "icon", "__publicField", "TextField", "input", "o", "v", "TextFieldAddon", "div", "__publicField", "prefix", "span", "suffix", "btn", "Button", "Row", "div", "obj", "align", "item", "Widget", "Text", "LTESubMenuButton", "div", "o", "menu", "button", "Row", "Icon", "Html", "LTEMenuButton", "arrow_icon", "arrow", "Panel", "panel", "LTEApp", "sideBar", "body", "topBar", "bar", "all", "item", "backdrop", "brand", "brand_icon", "brand_title", "sidebar_content", "user_panel", "user_photo", "user_name", "search", "TextFieldAddon", "lte_3_default", "MyApp", "Window", "lte", "lte_3_default", "LTEMenuButton", "LTESubMenuButton", "test", "Pagination", "n", "main_default"]
}
